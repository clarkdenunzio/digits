{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js","filenameRelative":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js.map","sourceFileName":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"semantic-ui"},"ignored":false,"code":"/* global AutoForm */Template.autoForm.helpers({\n  atts: function () {\n    // After removing all of the props we know about, everything else should\n    // become a form attribute unless it's an array or object.\n    var val = void 0,\n        htmlAttributes = {},\n        context = this;\n    context = AutoForm.Utility.addClass(context, \"ui form\");\n    var removeProps = [\"schema\", \"collection\", \"validation\", \"doc\", \"resetOnSuccess\", \"type\", \"template\", \"autosave\", \"autosaveOnKeyup\", \"meteormethod\", \"filter\", \"autoConvert\", \"removeEmptyStrings\", \"trimStrings\"]; // Filter out any attributes that have a component prefix\n\n    function hasComponentPrefix(prop) {\n      return _.any(AutoForm.Utility.componentTypeList, function (componentType) {\n        return prop.indexOf(componentType + \"-\") === 0;\n      });\n    } // Filter out arrays and objects, which are obviously not meant to be\n    // HTML attributes.\n\n\n    for (var prop in meteorBabelHelpers.sanitizeForInObject(context)) {\n      if (context.hasOwnProperty(prop) && !_.contains(removeProps, prop) && !hasComponentPrefix(prop)) {\n        val = context[prop];\n\n        if (!_.isArray(val) && !_.isObject(val)) {\n          htmlAttributes[prop] = val;\n        }\n      }\n    } // By default, we add the `novalidate=\"novalidate\"` attribute to our form,\n    // unless the user passes `validation=\"browser\"`.\n\n\n    if (this.validation !== \"browser\" && !htmlAttributes.novalidate) {\n      htmlAttributes.novalidate = \"novalidate\";\n    }\n\n    return htmlAttributes;\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js"],"names":["Template","autoForm","helpers","atts","val","htmlAttributes","context","AutoForm","Utility","addClass","removeProps","hasComponentPrefix","prop","_","any","componentTypeList","indexOf","componentType","hasOwnProperty","contains","isArray","isObject","validation","novalidate"],"mappings":"AAAA,qBAEAA,SAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACxBC,MADwB,cACjB;AACL;AACA;AACA,QAAIC,YAAJ;AAAA,QAASC,iBAAiB,EAA1B;AAAA,QAA8BC,UAAU,IAAxC;AAEAA,cAAUC,SAASC,OAAT,CAAiBC,QAAjB,CAA0BH,OAA1B,EAAmC,SAAnC,CAAV;AAEA,QAAII,cAAc,CAChB,QADgB,EAEhB,YAFgB,EAGhB,YAHgB,EAIhB,KAJgB,EAKhB,gBALgB,EAMhB,MANgB,EAOhB,UAPgB,EAQhB,UARgB,EAShB,iBATgB,EAUhB,cAVgB,EAWhB,QAXgB,EAYhB,aAZgB,EAahB,oBAbgB,EAchB,aAdgB,CAAlB,CAPK,CAwBL;;AACA,aAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,aAAOC,EAAEC,GAAF,CACLP,SAASC,OAAT,CAAiBO,iBADZ,EAEL;AAAA,eAAiBH,KAAKI,OAAL,CAAaC,gBAAgB,GAA7B,MAAsC,CAAvD;AAAA,OAFK,CAAP;AAID,KA9BI,CAgCL;AACA;;;AACA,SAAK,IAAIL,IAAT,2CAAiBN,OAAjB,GAA0B;AACxB,UAAIA,QAAQY,cAAR,CAAuBN,IAAvB,KAAgC,CAAEC,EAAEM,QAAF,CAAWT,WAAX,EAAwBE,IAAxB,CAAlC,IACA,CAAED,mBAAmBC,IAAnB,CADN,EACgC;AAC9BR,cAAME,QAAQM,IAAR,CAAN;;AAEA,YAAI,CAAEC,EAAEO,OAAF,CAAUhB,GAAV,CAAF,IAAoB,CAAES,EAAEQ,QAAF,CAAWjB,GAAX,CAA1B,EAA2C;AACzCC,yBAAeO,IAAf,IAAuBR,GAAvB;AACD;AACF;AACF,KA3CI,CA6CL;AACA;;;AACA,QAAI,KAAKkB,UAAL,KAAoB,SAApB,IAAiC,CAAEjB,eAAekB,UAAtD,EAAkE;AAChElB,qBAAekB,UAAf,GAA4B,YAA5B;AACD;;AAED,WAAOlB,cAAP;AACD;AArDuB,CAA1B","file":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js.map","sourcesContent":["/* global AutoForm */\n\nTemplate.autoForm.helpers({\n  atts() {\n    // After removing all of the props we know about, everything else should\n    // become a form attribute unless it's an array or object.\n    let val, htmlAttributes = {}, context = this;\n\n    context = AutoForm.Utility.addClass(context, \"ui form\");\n\n    let removeProps = [\n      \"schema\",\n      \"collection\",\n      \"validation\",\n      \"doc\",\n      \"resetOnSuccess\",\n      \"type\",\n      \"template\",\n      \"autosave\",\n      \"autosaveOnKeyup\",\n      \"meteormethod\",\n      \"filter\",\n      \"autoConvert\",\n      \"removeEmptyStrings\",\n      \"trimStrings\"\n    ];\n\n    // Filter out any attributes that have a component prefix\n    function hasComponentPrefix(prop) {\n      return _.any(\n        AutoForm.Utility.componentTypeList,\n        componentType => prop.indexOf(componentType + \"-\") === 0\n      );\n    }\n\n    // Filter out arrays and objects, which are obviously not meant to be\n    // HTML attributes.\n    for (let prop in context) {\n      if (context.hasOwnProperty(prop) && ! _.contains(removeProps, prop) &&\n          ! hasComponentPrefix(prop)) {\n        val = context[prop];\n\n        if (! _.isArray(val) && ! _.isObject(val)) {\n          htmlAttributes[prop] = val;\n        }\n      }\n    }\n\n    // By default, we add the `novalidate=\"novalidate\"` attribute to our form,\n    // unless the user passes `validation=\"browser\"`.\n    if (this.validation !== \"browser\" && ! htmlAttributes.novalidate) {\n      htmlAttributes.novalidate = \"novalidate\";\n    }\n\n    return htmlAttributes;\n  }\n});\n"]},"hash":"5ce884ada6b41cc6374466279bea7ee0edcbc2df"}
