{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/lib/semantic-ui/definitions/modules/progress.js","filenameRelative":"/client/lib/semantic-ui/definitions/modules/progress.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/lib/semantic-ui/definitions/modules/progress.js.map","sourceFileName":"/client/lib/semantic-ui/definitions/modules/progress.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"progress"},"ignored":false,"code":"/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.2.1\n*/ /*!\n    * # Semantic UI - Progress\n    * http://github.com/semantic-org/semantic-ui/\n    *\n    *\n    * Released under the MIT license\n    * http://opensource.org/licenses/MIT\n    *\n    */;\n\n(function ($, window, document, undefined) {\n  \"use strict\";\n\n  window = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n  var global = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\n  $.fn.progress = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var settings = $.isPlainObject(parameters) ? $.extend(true, {}, $.fn.progress.settings, parameters) : $.extend({}, $.fn.progress.settings),\n          className = settings.className,\n          metadata = settings.metadata,\n          namespace = settings.namespace,\n          selector = settings.selector,\n          error = settings.error,\n          eventNamespace = '.' + namespace,\n          moduleNamespace = 'module-' + namespace,\n          $module = $(this),\n          $bar = $(this).find(selector.bar),\n          $progress = $(this).find(selector.progress),\n          $label = $(this).find(selector.label),\n          element = this,\n          instance = $module.data(moduleNamespace),\n          animating = false,\n          transitionEnd,\n          module;\n      module = {\n        initialize: function () {\n          module.debug('Initializing progress bar', settings);\n          module.set.duration();\n          module.set.transitionEvent();\n          module.read.metadata();\n          module.read.settings();\n          module.instantiate();\n        },\n        instantiate: function () {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n        reset: function () {\n          module.remove.nextValue();\n          module.update.progress(0);\n        },\n        complete: function () {\n          if (module.percent === undefined || module.percent < 100) {\n            module.remove.progressPoll();\n            module.set.percent(100);\n          }\n        },\n        read: {\n          metadata: function () {\n            var data = {\n              percent: $module.data(metadata.percent),\n              total: $module.data(metadata.total),\n              value: $module.data(metadata.value)\n            };\n\n            if (data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n\n            if (data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n\n            if (data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function () {\n            if (settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n\n            if (settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n\n            if (settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n        increment: function (incrementValue) {\n          var maxValue, startValue, newValue;\n\n          if (module.has.total()) {\n            startValue = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue = startValue + incrementValue;\n          } else {\n            startValue = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n            newValue = startValue + incrementValue;\n            maxValue = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n          }\n\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        decrement: function (decrementValue) {\n          var total = module.get.total(),\n              startValue,\n              newValue;\n\n          if (total) {\n            startValue = module.get.value();\n            decrementValue = decrementValue || 1;\n            newValue = startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          } else {\n            startValue = module.get.percent();\n            decrementValue = decrementValue || module.get.randomValue();\n            newValue = startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        has: {\n          progressPoll: function () {\n            return module.progressPoll;\n          },\n          total: function () {\n            return module.get.total() !== false;\n          }\n        },\n        get: {\n          text: function (templateText) {\n            var value = module.value || 0,\n                total = module.total || 0,\n                percent = animating ? module.get.displayPercent() : module.percent || 0,\n                left = module.total > 0 ? total - value : 100 - percent;\n            templateText = templateText || '';\n            templateText = templateText.replace('{value}', value).replace('{total}', total).replace('{left}', left).replace('{percent}', percent);\n            module.verbose('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n          normalizedValue: function (value) {\n            if (value < 0) {\n              module.debug('Value cannot decrement below 0');\n              return 0;\n            }\n\n            if (module.has.total()) {\n              if (value > module.total) {\n                module.debug('Value cannot increment above total', module.total);\n                return module.total;\n              }\n            } else if (value > 100) {\n              module.debug('Value cannot increment above 100 percent');\n              return 100;\n            }\n\n            return value;\n          },\n          updateInterval: function () {\n            if (settings.updateInterval == 'auto') {\n              return settings.duration;\n            }\n\n            return settings.updateInterval;\n          },\n          randomValue: function () {\n            module.debug('Generating random increment percentage');\n            return Math.floor(Math.random() * settings.random.max + settings.random.min);\n          },\n          numericValue: function (value) {\n            return typeof value === 'string' ? value.replace(/[^\\d.]/g, '') !== '' ? +value.replace(/[^\\d.]/g, '') : false : value;\n          },\n          transitionEnd: function () {\n            var element = document.createElement('element'),\n                transitions = {\n              'transition': 'transitionend',\n              'OTransition': 'oTransitionEnd',\n              'MozTransition': 'transitionend',\n              'WebkitTransition': 'webkitTransitionEnd'\n            },\n                transition;\n\n            for (transition in meteorBabelHelpers.sanitizeForInObject(transitions)) {\n              if (element.style[transition] !== undefined) {\n                return transitions[transition];\n              }\n            }\n          },\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function () {\n            var barWidth = $bar.width(),\n                totalWidth = $module.width(),\n                minDisplay = parseInt($bar.css('min-width'), 10),\n                displayPercent = barWidth > minDisplay ? barWidth / totalWidth * 100 : module.percent;\n            return settings.precision > 0 ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision) : Math.round(displayPercent);\n          },\n          percent: function () {\n            return module.percent || 0;\n          },\n          value: function () {\n            return module.nextValue || module.value || 0;\n          },\n          total: function () {\n            return module.total || false;\n          }\n        },\n        create: {\n          progressPoll: function () {\n            module.progressPoll = setTimeout(function () {\n              module.update.toNextValue();\n              module.remove.progressPoll();\n            }, module.get.updateInterval());\n          }\n        },\n        is: {\n          complete: function () {\n            return module.is.success() || module.is.warning() || module.is.error();\n          },\n          success: function () {\n            return $module.hasClass(className.success);\n          },\n          warning: function () {\n            return $module.hasClass(className.warning);\n          },\n          error: function () {\n            return $module.hasClass(className.error);\n          },\n          active: function () {\n            return $module.hasClass(className.active);\n          },\n          visible: function () {\n            return $module.is(':visible');\n          }\n        },\n        remove: {\n          progressPoll: function () {\n            module.verbose('Removing progress poll timer');\n\n            if (module.progressPoll) {\n              clearTimeout(module.progressPoll);\n              delete module.progressPoll;\n            }\n          },\n          nextValue: function () {\n            module.verbose('Removing progress value stored for next update');\n            delete module.nextValue;\n          },\n          state: function () {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function () {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function () {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function () {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function () {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n        set: {\n          barWidth: function (value) {\n            if (value > 100) {\n              module.error(error.tooHigh, value);\n            } else if (value < 0) {\n              module.error(error.tooLow, value);\n            } else {\n              $bar.css('width', value + '%');\n              $module.attr('data-percent', parseInt(value, 10));\n            }\n          },\n          duration: function (duration) {\n            duration = duration || settings.duration;\n            duration = typeof duration == 'number' ? duration + 'ms' : duration;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar.css({\n              'transition-duration': duration\n            });\n          },\n          percent: function (percent) {\n            percent = typeof percent == 'string' ? +percent.replace('%', '') : percent; // round display percentage\n\n            percent = settings.precision > 0 ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision) : Math.round(percent);\n            module.percent = percent;\n\n            if (!module.has.total()) {\n              module.value = settings.precision > 0 ? Math.round(percent / 100 * module.total * (10 * settings.precision)) / (10 * settings.precision) : Math.round(percent / 100 * module.total * 10) / 10;\n\n              if (settings.limitValues) {\n                module.value = module.value > 100 ? 100 : module.value < 0 ? 0 : module.value;\n              }\n            }\n\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function () {\n            var animationCallback = function () {\n              module.verbose('Bar finished animating, removing continuous label updates');\n              clearInterval(module.interval);\n              animating = false;\n              module.set.labels();\n            };\n\n            clearInterval(module.interval);\n            $bar.one(transitionEnd + eventNamespace, animationCallback);\n            animating = true;\n            module.interval = setInterval(function () {\n              var isInDOM = $.contains(document.documentElement, element);\n\n              if (!isInDOM) {\n                clearInterval(module.interval);\n                animating = false;\n              }\n\n              module.set.labels();\n            }, settings.framerate);\n          },\n          labels: function () {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function (text) {\n            text = text || '';\n\n            if (text) {\n              text = module.get.text(text);\n              module.verbose('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function (percent) {\n            percent = percent !== undefined ? percent : module.percent;\n\n            if (percent === 100) {\n              if (settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              } else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n                module.remove.progressPoll();\n              }\n            } else if (percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            } else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function (text) {\n            if (text !== undefined) {\n              $progress.text(module.get.text(text));\n            } else if (settings.label == 'ratio' && module.total) {\n              module.verbose('Adding ratio to bar label');\n              $progress.text(module.get.text(settings.text.ratio));\n            } else if (settings.label == 'percent') {\n              module.verbose('Adding percentage to bar label');\n              $progress.text(module.get.text(settings.text.percent));\n            }\n          },\n          active: function (text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n\n            if (settings.showActivity && !module.is.active()) {\n              $module.addClass(className.active);\n            }\n\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            $bar.one(transitionEnd + eventNamespace, function () {\n              settings.onActive.call(element, module.value, module.total);\n            });\n          },\n          success: function (text) {\n            text = text || settings.text.success || settings.text.active;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n\n            if (settings.text.success) {\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\n              module.set.label(text);\n            } else {\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\n              module.set.label(text);\n            }\n\n            $bar.one(transitionEnd + eventNamespace, function () {\n              settings.onSuccess.call(element, module.total);\n            });\n          },\n          warning: function (text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            $bar.one(transitionEnd + eventNamespace, function () {\n              settings.onWarning.call(element, module.value, module.total);\n            });\n          },\n          error: function (text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\n\n            if (text) {\n              module.set.label(text);\n            }\n\n            $bar.one(transitionEnd + eventNamespace, function () {\n              settings.onError.call(element, module.value, module.total);\n            });\n          },\n          transitionEvent: function () {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function (totalValue) {\n            module.total = totalValue;\n          },\n          value: function (value) {\n            module.value = value;\n          },\n          progress: function (value) {\n            if (!module.has.progressPoll()) {\n              module.debug('First update in progress update interval, immediately updating', value);\n              module.update.progress(value);\n              module.create.progressPoll();\n            } else {\n              module.debug('Updated within interval, setting next update to use new value', value);\n              module.set.nextValue(value);\n            }\n          },\n          nextValue: function (value) {\n            module.nextValue = value;\n          }\n        },\n        update: {\n          toNextValue: function () {\n            var nextValue = module.nextValue;\n\n            if (nextValue) {\n              module.debug('Update interval complete using last updated value', nextValue);\n              module.update.progress(nextValue);\n              module.remove.nextValue();\n            }\n          },\n          progress: function (value) {\n            var percentComplete;\n            value = module.get.numericValue(value);\n\n            if (value === false) {\n              module.error(error.nonNumeric, value);\n            }\n\n            value = module.get.normalizedValue(value);\n\n            if (module.has.total()) {\n              module.set.value(value);\n              percentComplete = value / module.total * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent(percentComplete);\n            } else {\n              percentComplete = value;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent(percentComplete);\n            }\n          }\n        },\n        setting: function (name, value) {\n          module.debug('Changing setting', name, value);\n\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            if ($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            } else {\n              settings[name] = value;\n            }\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (!settings.silent && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (!settings.silent && settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          if (!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n\n      if (methodInvoked) {\n        if (instance === undefined) {\n          module.initialize();\n        }\n\n        module.invoke(query);\n      } else {\n        if (instance !== undefined) {\n          instance.invoke('destroy');\n        }\n\n        module.initialize();\n      }\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.progress.settings = {\n    name: 'Progress',\n    namespace: 'progress',\n    silent: false,\n    debug: false,\n    verbose: false,\n    performance: true,\n    random: {\n      min: 2,\n      max: 5\n    },\n    duration: 300,\n    updateInterval: 'auto',\n    autoSuccess: true,\n    showActivity: true,\n    limitValues: true,\n    label: 'percent',\n    precision: 0,\n    framerate: 1000 / 30,\n    /// 30 fps\n    percent: false,\n    total: false,\n    value: false,\n    onLabelUpdate: function (state, text, value, total) {\n      return text;\n    },\n    onChange: function (percent, value, total) {},\n    onSuccess: function (total) {},\n    onActive: function (value, total) {},\n    onError: function (value, total) {},\n    onWarning: function (value, total) {},\n    error: {\n      method: 'The method you called is not defined.',\n      nonNumeric: 'Progress value is non numeric',\n      tooHigh: 'Value specified is above 100%',\n      tooLow: 'Value specified is below 0%'\n    },\n    regExp: {\n      variable: /\\{\\$*[A-z0-9]+\\}/g\n    },\n    metadata: {\n      percent: 'percent',\n      total: 'total',\n      value: 'value'\n    },\n    selector: {\n      bar: '> .bar',\n      label: '> .label',\n      progress: '.bar > .progress'\n    },\n    text: {\n      active: false,\n      error: false,\n      success: false,\n      warning: false,\n      percent: '{percent}%',\n      ratio: '{value} of {total}'\n    },\n    className: {\n      active: 'active',\n      error: 'error',\n      success: 'success',\n      warning: 'warning'\n    }\n  };\n})(jQuery, window, document);","ast":null,"map":{"version":3,"sources":["/client/lib/semantic-ui/definitions/modules/progress.js"],"names":["$","window","document","undefined","Math","self","Function","global","fn","progress","parameters","$allModules","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","returnedValue","each","settings","isPlainObject","extend","className","metadata","namespace","error","eventNamespace","moduleNamespace","$module","$bar","find","bar","$progress","$label","label","element","instance","data","animating","transitionEnd","module","initialize","debug","set","duration","transitionEvent","read","instantiate","verbose","destroy","clearInterval","interval","remove","state","removeData","reset","nextValue","update","complete","percent","progressPoll","total","value","increment","incrementValue","maxValue","startValue","newValue","has","get","randomValue","normalizedValue","decrement","decrementValue","text","templateText","displayPercent","left","replace","updateInterval","floor","random","max","min","numericValue","createElement","transitions","transition","style","barWidth","width","totalWidth","minDisplay","parseInt","css","precision","round","create","setTimeout","toNextValue","is","success","warning","hasClass","active","visible","clearTimeout","removeClass","tooHigh","tooLow","attr","limitValues","labelInterval","labels","onChange","animationCallback","one","setInterval","isInDOM","contains","documentElement","framerate","barLabel","autoSuccess","ratio","showActivity","addClass","onLabelUpdate","onActive","onSuccess","onWarning","onError","totalValue","percentComplete","nonNumeric","setting","name","internal","silent","log","prototype","bind","console","info","apply","message","currentTime","executionTime","previousTime","push","timer","display","title","totalTime","index","group","table","length","groupCollapsed","groupEnd","invoke","passedArguments","context","object","maxDepth","found","response","split","depth","camelCaseValue","charAt","toUpperCase","method","isFunction","isArray","regExp","variable","jQuery"],"mappings":"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","file":"/client/lib/semantic-ui/definitions/modules/progress.js.map","sourcesContent":["/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.2.1\n*/\n/*!\n * # Semantic UI - Progress\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\nvar\n  global = (typeof window != 'undefined' && window.Math == Math)\n    ? window\n    : (typeof self != 'undefined' && self.Math == Math)\n      ? self\n      : Function('return this')()\n;\n\n$.fn.progress = function(parameters) {\n  var\n    $allModules    = $(this),\n\n    moduleSelector = $allModules.selector || '',\n\n    time           = new Date().getTime(),\n    performance    = [],\n\n    query          = arguments[0],\n    methodInvoked  = (typeof query == 'string'),\n    queryArguments = [].slice.call(arguments, 1),\n\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n        settings          = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.progress.settings, parameters)\n          : $.extend({}, $.fn.progress.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        namespace       = settings.namespace,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        $module         = $(this),\n        $bar            = $(this).find(selector.bar),\n        $progress       = $(this).find(selector.progress),\n        $label          = $(this).find(selector.label),\n\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        animating = false,\n        transitionEnd,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing progress bar', settings);\n\n          module.set.duration();\n          module.set.transitionEvent();\n\n          module.read.metadata();\n          module.read.settings();\n\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of progress', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n        destroy: function() {\n          module.verbose('Destroying previous progress for', $module);\n          clearInterval(instance.interval);\n          module.remove.state();\n          $module.removeData(moduleNamespace);\n          instance = undefined;\n        },\n\n        reset: function() {\n          module.remove.nextValue();\n          module.update.progress(0);\n        },\n\n        complete: function() {\n          if(module.percent === undefined || module.percent < 100) {\n            module.remove.progressPoll();\n            module.set.percent(100);\n          }\n        },\n\n        read: {\n          metadata: function() {\n            var\n              data = {\n                percent : $module.data(metadata.percent),\n                total   : $module.data(metadata.total),\n                value   : $module.data(metadata.value)\n              }\n            ;\n            if(data.percent) {\n              module.debug('Current percent value set from metadata', data.percent);\n              module.set.percent(data.percent);\n            }\n            if(data.total) {\n              module.debug('Total value set from metadata', data.total);\n              module.set.total(data.total);\n            }\n            if(data.value) {\n              module.debug('Current value set from metadata', data.value);\n              module.set.value(data.value);\n              module.set.progress(data.value);\n            }\n          },\n          settings: function() {\n            if(settings.total !== false) {\n              module.debug('Current total set in settings', settings.total);\n              module.set.total(settings.total);\n            }\n            if(settings.value !== false) {\n              module.debug('Current value set in settings', settings.value);\n              module.set.value(settings.value);\n              module.set.progress(module.value);\n            }\n            if(settings.percent !== false) {\n              module.debug('Current percent set in settings', settings.percent);\n              module.set.percent(settings.percent);\n            }\n          }\n        },\n\n        increment: function(incrementValue) {\n          var\n            maxValue,\n            startValue,\n            newValue\n          ;\n          if( module.has.total() ) {\n            startValue     = module.get.value();\n            incrementValue = incrementValue || 1;\n            newValue       = startValue + incrementValue;\n          }\n          else {\n            startValue     = module.get.percent();\n            incrementValue = incrementValue || module.get.randomValue();\n\n            newValue       = startValue + incrementValue;\n            maxValue       = 100;\n            module.debug('Incrementing percentage by', startValue, newValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n        decrement: function(decrementValue) {\n          var\n            total     = module.get.total(),\n            startValue,\n            newValue\n          ;\n          if(total) {\n            startValue     =  module.get.value();\n            decrementValue =  decrementValue || 1;\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing value by', decrementValue, startValue);\n          }\n          else {\n            startValue     =  module.get.percent();\n            decrementValue =  decrementValue || module.get.randomValue();\n            newValue       =  startValue - decrementValue;\n            module.debug('Decrementing percentage by', decrementValue, startValue);\n          }\n          newValue = module.get.normalizedValue(newValue);\n          module.set.progress(newValue);\n        },\n\n        has: {\n          progressPoll: function() {\n            return module.progressPoll;\n          },\n          total: function() {\n            return (module.get.total() !== false);\n          }\n        },\n\n        get: {\n          text: function(templateText) {\n            var\n              value   = module.value                || 0,\n              total   = module.total                || 0,\n              percent = (animating)\n                ? module.get.displayPercent()\n                : module.percent || 0,\n              left = (module.total > 0)\n                ? (total - value)\n                : (100 - percent)\n            ;\n            templateText = templateText || '';\n            templateText = templateText\n              .replace('{value}', value)\n              .replace('{total}', total)\n              .replace('{left}', left)\n              .replace('{percent}', percent)\n            ;\n            module.verbose('Adding variables to progress bar text', templateText);\n            return templateText;\n          },\n\n          normalizedValue: function(value) {\n            if(value < 0) {\n              module.debug('Value cannot decrement below 0');\n              return 0;\n            }\n            if(module.has.total()) {\n              if(value > module.total) {\n                module.debug('Value cannot increment above total', module.total);\n                return module.total;\n              }\n            }\n            else if(value > 100 ) {\n              module.debug('Value cannot increment above 100 percent');\n              return 100;\n            }\n            return value;\n          },\n\n          updateInterval: function() {\n            if(settings.updateInterval == 'auto') {\n              return settings.duration;\n            }\n            return settings.updateInterval;\n          },\n\n          randomValue: function() {\n            module.debug('Generating random increment percentage');\n            return Math.floor((Math.random() * settings.random.max) + settings.random.min);\n          },\n\n          numericValue: function(value) {\n            return (typeof value === 'string')\n              ? (value.replace(/[^\\d.]/g, '') !== '')\n                ? +(value.replace(/[^\\d.]/g, ''))\n                : false\n              : value\n            ;\n          },\n\n          transitionEnd: function() {\n            var\n              element     = document.createElement('element'),\n              transitions = {\n                'transition'       :'transitionend',\n                'OTransition'      :'oTransitionEnd',\n                'MozTransition'    :'transitionend',\n                'WebkitTransition' :'webkitTransitionEnd'\n              },\n              transition\n            ;\n            for(transition in transitions){\n              if( element.style[transition] !== undefined ){\n                return transitions[transition];\n              }\n            }\n          },\n\n          // gets current displayed percentage (if animating values this is the intermediary value)\n          displayPercent: function() {\n            var\n              barWidth       = $bar.width(),\n              totalWidth     = $module.width(),\n              minDisplay     = parseInt($bar.css('min-width'), 10),\n              displayPercent = (barWidth > minDisplay)\n                ? (barWidth / totalWidth * 100)\n                : module.percent\n            ;\n            return (settings.precision > 0)\n              ? Math.round(displayPercent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(displayPercent)\n            ;\n          },\n\n          percent: function() {\n            return module.percent || 0;\n          },\n          value: function() {\n            return module.nextValue || module.value || 0;\n          },\n          total: function() {\n            return module.total || false;\n          }\n        },\n\n        create: {\n          progressPoll: function() {\n            module.progressPoll = setTimeout(function() {\n              module.update.toNextValue();\n              module.remove.progressPoll();\n            }, module.get.updateInterval());\n          },\n        },\n\n        is: {\n          complete: function() {\n            return module.is.success() || module.is.warning() || module.is.error();\n          },\n          success: function() {\n            return $module.hasClass(className.success);\n          },\n          warning: function() {\n            return $module.hasClass(className.warning);\n          },\n          error: function() {\n            return $module.hasClass(className.error);\n          },\n          active: function() {\n            return $module.hasClass(className.active);\n          },\n          visible: function() {\n            return $module.is(':visible');\n          }\n        },\n\n        remove: {\n          progressPoll: function() {\n            module.verbose('Removing progress poll timer');\n            if(module.progressPoll) {\n              clearTimeout(module.progressPoll);\n              delete module.progressPoll;\n            }\n          },\n          nextValue: function() {\n            module.verbose('Removing progress value stored for next update');\n            delete module.nextValue;\n          },\n          state: function() {\n            module.verbose('Removing stored state');\n            delete module.total;\n            delete module.percent;\n            delete module.value;\n          },\n          active: function() {\n            module.verbose('Removing active state');\n            $module.removeClass(className.active);\n          },\n          success: function() {\n            module.verbose('Removing success state');\n            $module.removeClass(className.success);\n          },\n          warning: function() {\n            module.verbose('Removing warning state');\n            $module.removeClass(className.warning);\n          },\n          error: function() {\n            module.verbose('Removing error state');\n            $module.removeClass(className.error);\n          }\n        },\n\n        set: {\n          barWidth: function(value) {\n            if(value > 100) {\n              module.error(error.tooHigh, value);\n            }\n            else if (value < 0) {\n              module.error(error.tooLow, value);\n            }\n            else {\n              $bar\n                .css('width', value + '%')\n              ;\n              $module\n                .attr('data-percent', parseInt(value, 10))\n              ;\n            }\n          },\n          duration: function(duration) {\n            duration = duration || settings.duration;\n            duration = (typeof duration == 'number')\n              ? duration + 'ms'\n              : duration\n            ;\n            module.verbose('Setting progress bar transition duration', duration);\n            $bar\n              .css({\n                'transition-duration':  duration\n              })\n            ;\n          },\n          percent: function(percent) {\n            percent = (typeof percent == 'string')\n              ? +(percent.replace('%', ''))\n              : percent\n            ;\n            // round display percentage\n            percent = (settings.precision > 0)\n              ? Math.round(percent * (10 * settings.precision)) / (10 * settings.precision)\n              : Math.round(percent)\n            ;\n            module.percent = percent;\n            if( !module.has.total() ) {\n              module.value = (settings.precision > 0)\n                ? Math.round( (percent / 100) * module.total * (10 * settings.precision)) / (10 * settings.precision)\n                : Math.round( (percent / 100) * module.total * 10) / 10\n              ;\n              if(settings.limitValues) {\n                module.value = (module.value > 100)\n                  ? 100\n                  : (module.value < 0)\n                    ? 0\n                    : module.value\n                ;\n              }\n            }\n            module.set.barWidth(percent);\n            module.set.labelInterval();\n            module.set.labels();\n            settings.onChange.call(element, percent, module.value, module.total);\n          },\n          labelInterval: function() {\n            var\n              animationCallback = function() {\n                module.verbose('Bar finished animating, removing continuous label updates');\n                clearInterval(module.interval);\n                animating = false;\n                module.set.labels();\n              }\n            ;\n            clearInterval(module.interval);\n            $bar.one(transitionEnd + eventNamespace, animationCallback);\n            animating = true;\n            module.interval = setInterval(function() {\n              var\n                isInDOM = $.contains(document.documentElement, element)\n              ;\n              if(!isInDOM) {\n                clearInterval(module.interval);\n                animating = false;\n              }\n              module.set.labels();\n            }, settings.framerate);\n          },\n          labels: function() {\n            module.verbose('Setting both bar progress and outer label text');\n            module.set.barLabel();\n            module.set.state();\n          },\n          label: function(text) {\n            text = text || '';\n            if(text) {\n              text = module.get.text(text);\n              module.verbose('Setting label to text', text);\n              $label.text(text);\n            }\n          },\n          state: function(percent) {\n            percent = (percent !== undefined)\n              ? percent\n              : module.percent\n            ;\n            if(percent === 100) {\n              if(settings.autoSuccess && !(module.is.warning() || module.is.error() || module.is.success())) {\n                module.set.success();\n                module.debug('Automatically triggering success at 100%');\n              }\n              else {\n                module.verbose('Reached 100% removing active state');\n                module.remove.active();\n                module.remove.progressPoll();\n              }\n            }\n            else if(percent > 0) {\n              module.verbose('Adjusting active progress bar label', percent);\n              module.set.active();\n            }\n            else {\n              module.remove.active();\n              module.set.label(settings.text.active);\n            }\n          },\n          barLabel: function(text) {\n            if(text !== undefined) {\n              $progress.text( module.get.text(text) );\n            }\n            else if(settings.label == 'ratio' && module.total) {\n              module.verbose('Adding ratio to bar label');\n              $progress.text( module.get.text(settings.text.ratio) );\n            }\n            else if(settings.label == 'percent') {\n              module.verbose('Adding percentage to bar label');\n              $progress.text( module.get.text(settings.text.percent) );\n            }\n          },\n          active: function(text) {\n            text = text || settings.text.active;\n            module.debug('Setting active state');\n            if(settings.showActivity && !module.is.active() ) {\n              $module.addClass(className.active);\n            }\n            module.remove.warning();\n            module.remove.error();\n            module.remove.success();\n            text = settings.onLabelUpdate('active', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            $bar.one(transitionEnd + eventNamespace, function() {\n              settings.onActive.call(element, module.value, module.total);\n            });\n          },\n          success : function(text) {\n            text = text || settings.text.success || settings.text.active;\n            module.debug('Setting success state');\n            $module.addClass(className.success);\n            module.remove.active();\n            module.remove.warning();\n            module.remove.error();\n            module.complete();\n            if(settings.text.success) {\n              text = settings.onLabelUpdate('success', text, module.value, module.total);\n              module.set.label(text);\n            }\n            else {\n              text = settings.onLabelUpdate('active', text, module.value, module.total);\n              module.set.label(text);\n            }\n            $bar.one(transitionEnd + eventNamespace, function() {\n              settings.onSuccess.call(element, module.total);\n            });\n          },\n          warning : function(text) {\n            text = text || settings.text.warning;\n            module.debug('Setting warning state');\n            $module.addClass(className.warning);\n            module.remove.active();\n            module.remove.success();\n            module.remove.error();\n            module.complete();\n            text = settings.onLabelUpdate('warning', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            $bar.one(transitionEnd + eventNamespace, function() {\n              settings.onWarning.call(element, module.value, module.total);\n            });\n          },\n          error : function(text) {\n            text = text || settings.text.error;\n            module.debug('Setting error state');\n            $module.addClass(className.error);\n            module.remove.active();\n            module.remove.success();\n            module.remove.warning();\n            module.complete();\n            text = settings.onLabelUpdate('error', text, module.value, module.total);\n            if(text) {\n              module.set.label(text);\n            }\n            $bar.one(transitionEnd + eventNamespace, function() {\n              settings.onError.call(element, module.value, module.total);\n            });\n          },\n          transitionEvent: function() {\n            transitionEnd = module.get.transitionEnd();\n          },\n          total: function(totalValue) {\n            module.total = totalValue;\n          },\n          value: function(value) {\n            module.value = value;\n          },\n          progress: function(value) {\n            if(!module.has.progressPoll()) {\n              module.debug('First update in progress update interval, immediately updating', value);\n              module.update.progress(value);\n              module.create.progressPoll();\n            }\n            else {\n              module.debug('Updated within interval, setting next update to use new value', value);\n              module.set.nextValue(value);\n            }\n          },\n          nextValue: function(value) {\n            module.nextValue = value;\n          }\n        },\n\n        update: {\n          toNextValue: function() {\n            var\n              nextValue = module.nextValue\n            ;\n            if(nextValue) {\n              module.debug('Update interval complete using last updated value', nextValue);\n              module.update.progress(nextValue);\n              module.remove.nextValue();\n            }\n          },\n          progress: function(value) {\n            var\n              percentComplete\n            ;\n            value = module.get.numericValue(value);\n            if(value === false) {\n              module.error(error.nonNumeric, value);\n            }\n            value = module.get.normalizedValue(value);\n            if( module.has.total() ) {\n              module.set.value(value);\n              percentComplete = (value / module.total) * 100;\n              module.debug('Calculating percent complete from total', percentComplete);\n              module.set.percent( percentComplete );\n            }\n            else {\n              percentComplete = value;\n              module.debug('Setting value to exact percentage value', percentComplete);\n              module.set.percent( percentComplete );\n            }\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.progress.settings = {\n\n  name         : 'Progress',\n  namespace    : 'progress',\n\n  silent       : false,\n  debug        : false,\n  verbose      : false,\n  performance  : true,\n\n  random       : {\n    min : 2,\n    max : 5\n  },\n\n  duration       : 300,\n\n  updateInterval : 'auto',\n\n  autoSuccess    : true,\n  showActivity   : true,\n  limitValues    : true,\n\n  label          : 'percent',\n  precision      : 0,\n  framerate      : (1000 / 30), /// 30 fps\n\n  percent        : false,\n  total          : false,\n  value          : false,\n\n  onLabelUpdate : function(state, text, value, total){\n    return text;\n  },\n  onChange      : function(percent, value, total){},\n  onSuccess     : function(total){},\n  onActive      : function(value, total){},\n  onError       : function(value, total){},\n  onWarning     : function(value, total){},\n\n  error    : {\n    method     : 'The method you called is not defined.',\n    nonNumeric : 'Progress value is non numeric',\n    tooHigh    : 'Value specified is above 100%',\n    tooLow     : 'Value specified is below 0%'\n  },\n\n  regExp: {\n    variable: /\\{\\$*[A-z0-9]+\\}/g\n  },\n\n  metadata: {\n    percent : 'percent',\n    total   : 'total',\n    value   : 'value'\n  },\n\n  selector : {\n    bar      : '> .bar',\n    label    : '> .label',\n    progress : '.bar > .progress'\n  },\n\n  text : {\n    active  : false,\n    error   : false,\n    success : false,\n    warning : false,\n    percent : '{percent}%',\n    ratio   : '{value} of {total}'\n  },\n\n  className : {\n    active  : 'active',\n    error   : 'error',\n    success : 'success',\n    warning : 'warning'\n  }\n\n};\n\n\n})( jQuery, window, document );\n"]},"hash":"c2a48b6724ba3cd060b06ff48a33645211a88011"}
