{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/lib/semantic-ui/definitions/behaviors/form.js","filenameRelative":"/client/lib/semantic-ui/definitions/behaviors/form.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/lib/semantic-ui/definitions/behaviors/form.js.map","sourceFileName":"/client/lib/semantic-ui/definitions/behaviors/form.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"form"},"ignored":false,"code":"/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.2.1\n*/ /*!\n    * # Semantic UI - Form Validation\n    * http://github.com/semantic-org/semantic-ui/\n    *\n    *\n    * Released under the MIT license\n    * http://opensource.org/licenses/MIT\n    *\n    */;\n\n(function ($, window, document, undefined) {\n  \"use strict\";\n\n  window = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\n  $.fn.form = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        legacyParameters = arguments[1],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var $module = $(this),\n          element = this,\n          formErrors = [],\n          keyHeldDown = false,\n          // set at run-time\n      $field,\n          $group,\n          $message,\n          $prompt,\n          $submit,\n          $clear,\n          $reset,\n          settings,\n          validation,\n          metadata,\n          selector,\n          className,\n          error,\n          namespace,\n          moduleNamespace,\n          eventNamespace,\n          instance,\n          module;\n      module = {\n        initialize: function () {\n          // settings grabbed at run time\n          module.get.settings();\n\n          if (methodInvoked) {\n            if (instance === undefined) {\n              module.instantiate();\n            }\n\n            module.invoke(query);\n          } else {\n            if (instance !== undefined) {\n              instance.invoke('destroy');\n            }\n\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module.removeData(moduleNamespace);\n        },\n        refresh: function () {\n          module.verbose('Refreshing selector cache');\n          $field = $module.find(selector.field);\n          $group = $module.find(selector.group);\n          $message = $module.find(selector.message);\n          $prompt = $module.find(selector.prompt);\n          $submit = $module.find(selector.submit);\n          $clear = $module.find(selector.clear);\n          $reset = $module.find(selector.reset);\n        },\n        submit: function () {\n          module.verbose('Submitting form', $module);\n          $module.submit();\n        },\n        attachEvents: function (selector, action) {\n          action = action || 'submit';\n          $(selector).on('click' + eventNamespace, function (event) {\n            module[action]();\n            event.preventDefault();\n          });\n        },\n        bindEvents: function () {\n          module.verbose('Attaching form events');\n          $module.on('submit' + eventNamespace, module.validate.form).on('blur' + eventNamespace, selector.field, module.event.field.blur).on('click' + eventNamespace, selector.submit, module.submit).on('click' + eventNamespace, selector.reset, module.reset).on('click' + eventNamespace, selector.clear, module.clear);\n\n          if (settings.keyboardShortcuts) {\n            $module.on('keydown' + eventNamespace, selector.field, module.event.field.keydown);\n          }\n\n          $field.each(function () {\n            var $input = $(this),\n                type = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input);\n            $(this).on(inputEvent + eventNamespace, module.event.field.change);\n          });\n        },\n        clear: function () {\n          $field.each(function () {\n            var $field = $(this),\n                $element = $field.parent(),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox = $element.is(selector.uiCheckbox),\n                isDropdown = $element.is(selector.uiDropdown),\n                isErrored = $fieldGroup.hasClass(className.error);\n\n            if (isErrored) {\n              module.verbose('Resetting error on field', $fieldGroup);\n              $fieldGroup.removeClass(className.error);\n              $prompt.remove();\n            }\n\n            if (isDropdown) {\n              module.verbose('Resetting dropdown value', $element, defaultValue);\n              $element.dropdown('clear');\n            } else if (isCheckbox) {\n              $field.prop('checked', false);\n            } else {\n              module.verbose('Resetting field value', $field, defaultValue);\n              $field.val('');\n            }\n          });\n        },\n        reset: function () {\n          $field.each(function () {\n            var $field = $(this),\n                $element = $field.parent(),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox = $element.is(selector.uiCheckbox),\n                isDropdown = $element.is(selector.uiDropdown),\n                isErrored = $fieldGroup.hasClass(className.error);\n\n            if (defaultValue === undefined) {\n              return;\n            }\n\n            if (isErrored) {\n              module.verbose('Resetting error on field', $fieldGroup);\n              $fieldGroup.removeClass(className.error);\n              $prompt.remove();\n            }\n\n            if (isDropdown) {\n              module.verbose('Resetting dropdown value', $element, defaultValue);\n              $element.dropdown('restore defaults');\n            } else if (isCheckbox) {\n              module.verbose('Resetting checkbox value', $element, defaultValue);\n              $field.prop('checked', defaultValue);\n            } else {\n              module.verbose('Resetting field value', $field, defaultValue);\n              $field.val(defaultValue);\n            }\n          });\n        },\n        is: {\n          bracketedRule: function (rule) {\n            return rule.type && rule.type.match(settings.regExp.bracket);\n          },\n          empty: function ($field) {\n            if (!$field || $field.length === 0) {\n              return true;\n            } else if ($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            } else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function ($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function () {\n            var allValid = true;\n            module.verbose('Checking if form is valid');\n            $.each(validation, function (fieldName, field) {\n              if (!module.validate.field(field, fieldName)) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n        removeEvents: function () {\n          $module.off(eventNamespace);\n          $field.off(eventNamespace);\n          $submit.off(eventNamespace);\n          $field.off(eventNamespace);\n        },\n        event: {\n          field: {\n            keydown: function (event) {\n              var $field = $(this),\n                  key = event.which,\n                  isInput = $field.is(selector.input),\n                  isCheckbox = $field.is(selector.checkbox),\n                  isInDropdown = $field.closest(selector.uiDropdown).length > 0,\n                  keyCode = {\n                enter: 13,\n                escape: 27\n              };\n\n              if (key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field.blur();\n              }\n\n              if (!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if (!keyHeldDown) {\n                  $field.one('keyup' + eventNamespace, module.event.field.keyup);\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n\n                keyHeldDown = true;\n              }\n            },\n            keyup: function () {\n              keyHeldDown = false;\n            },\n            blur: function (event) {\n              var $field = $(this),\n                  $fieldGroup = $field.closest($group),\n                  validationRules = module.get.validation($field);\n\n              if ($fieldGroup.hasClass(className.error)) {\n                module.debug('Revalidating field', $field, validationRules);\n\n                if (validationRules) {\n                  module.validate.field(validationRules);\n                }\n              } else if (settings.on == 'blur' || settings.on == 'change') {\n                if (validationRules) {\n                  module.validate.field(validationRules);\n                }\n              }\n            },\n            change: function (event) {\n              var $field = $(this),\n                  $fieldGroup = $field.closest($group),\n                  validationRules = module.get.validation($field);\n\n              if (settings.on == 'change' || $fieldGroup.hasClass(className.error) && settings.revalidate) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function () {\n                  module.debug('Revalidating field', $field, module.get.validation($field));\n                  module.validate.field(validationRules);\n                }, settings.delay);\n              }\n            }\n          }\n        },\n        get: {\n          ancillaryValue: function (rule) {\n            if (!rule.type || !module.is.bracketedRule(rule)) {\n              return false;\n            }\n\n            return rule.type.match(settings.regExp.bracket)[1] + '';\n          },\n          ruleName: function (rule) {\n            if (module.is.bracketedRule(rule)) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n\n            return rule.type;\n          },\n          changeEvent: function (type, $input) {\n            if (type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            } else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function () {\n            return document.createElement('input').oninput !== undefined ? 'input' : document.createElement('input').onpropertychange !== undefined ? 'propertychange' : 'keyup';\n          },\n          prompt: function (rule, field) {\n            var ruleName = module.get.ruleName(rule),\n                ancillary = module.get.ancillaryValue(rule),\n                prompt = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n                requiresValue = prompt.search('{value}') !== -1,\n                requiresName = prompt.search('{name}') !== -1,\n                $label,\n                $field,\n                name;\n\n            if (requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n\n            if (requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n\n            if (requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = $label.length == 1 ? $label.text() : $field.prop('placeholder') || settings.text.unspecifiedField;\n              prompt = prompt.replace('{name}', name);\n            }\n\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n\n            if (!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n\n            return prompt;\n          },\n          settings: function () {\n            if ($.isPlainObject(parameters)) {\n              var keys = Object.keys(parameters),\n                  isLegacySettings = keys.length > 0 ? parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined : false,\n                  ruleKeys;\n\n              if (isLegacySettings) {\n                // 1.x (ducktyped)\n                settings = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              } else {\n                // 2.x\n                if (parameters.fields) {\n                  ruleKeys = Object.keys(parameters.fields);\n\n                  if (typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]])) {\n                    $.each(parameters.fields, function (name, rules) {\n                      if (typeof rules == 'string') {\n                        rules = [rules];\n                      }\n\n                      parameters.fields[name] = {\n                        rules: []\n                      };\n                      $.each(rules, function (index, rule) {\n                        parameters.fields[name].rules.push({\n                          type: rule\n                        });\n                      });\n                    });\n                  }\n                }\n\n                settings = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            } else {\n              settings = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            } // shorthand\n\n\n            namespace = settings.namespace;\n            metadata = settings.metadata;\n            selector = settings.selector;\n            className = settings.className;\n            error = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace = '.' + namespace; // grab instance\n\n            instance = $module.data(moduleNamespace); // refresh selector cache\n\n            module.refresh();\n          },\n          field: function (identifier) {\n            module.verbose('Finding field with identifier', identifier);\n\n            if ($field.filter('#' + identifier).length > 0) {\n              return $field.filter('#' + identifier);\n            } else if ($field.filter('[name=\"' + identifier + '\"]').length > 0) {\n              return $field.filter('[name=\"' + identifier + '\"]');\n            } else if ($field.filter('[name=\"' + identifier + '[]\"]').length > 0) {\n              return $field.filter('[name=\"' + identifier + '[]\"]');\n            } else if ($field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]').length > 0) {\n              return $field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]');\n            }\n\n            return $('<input/>');\n          },\n          fields: function (fields) {\n            var $fields = $();\n            $.each(fields, function (index, name) {\n              $fields = $fields.add(module.get.field(name));\n            });\n            return $fields;\n          },\n          validation: function ($field) {\n            var fieldValidation, identifier;\n\n            if (!validation) {\n              return false;\n            }\n\n            $.each(validation, function (fieldName, field) {\n              identifier = field.identifier || fieldName;\n\n              if (module.get.field(identifier)[0] == $field[0]) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var fields = [],\n                results;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var $fields = $.isArray(fields) ? module.get.fields(fields) : $field,\n                values = {};\n            $fields.each(function (index, field) {\n              var $field = $(field),\n                  type = $field.prop('type'),\n                  name = $field.prop('name'),\n                  value = $field.val(),\n                  isCheckbox = $field.is(selector.checkbox),\n                  isRadio = $field.is(selector.radio),\n                  isMultiple = name.indexOf('[]') !== -1,\n                  isChecked = isCheckbox ? $field.is(':checked') : false;\n\n              if (name) {\n                if (isMultiple) {\n                  name = name.replace('[]', '');\n\n                  if (!values[name]) {\n                    values[name] = [];\n                  }\n\n                  if (isCheckbox) {\n                    if (isChecked) {\n                      values[name].push(value || true);\n                    } else {\n                      values[name].push(false);\n                    }\n                  } else {\n                    values[name].push(value);\n                  }\n                } else {\n                  if (isRadio) {\n                    if (isChecked) {\n                      values[name] = value;\n                    }\n                  } else if (isCheckbox) {\n                    if (isChecked) {\n                      values[name] = value || true;\n                    } else {\n                      values[name] = false;\n                    }\n                  } else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n        has: {\n          field: function (identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n\n            if (typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n\n            if ($field.filter('#' + identifier).length > 0) {\n              return true;\n            } else if ($field.filter('[name=\"' + identifier + '\"]').length > 0) {\n              return true;\n            } else if ($field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]').length > 0) {\n              return true;\n            }\n\n            return false;\n          }\n        },\n        add: {\n          prompt: function (identifier, errors) {\n            var $field = module.get.field(identifier),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.children(selector.prompt),\n                promptExists = $prompt.length !== 0;\n            errors = typeof errors == 'string' ? [errors] : errors;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup.addClass(className.error);\n\n            if (settings.inline) {\n              if (!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt.appendTo($fieldGroup);\n              }\n\n              $prompt.html(errors[0]);\n\n              if (!promptExists) {\n                if (settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                } else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt.fadeIn(settings.duration);\n                }\n              } else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function (errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message.html(settings.templates.error(errors));\n          }\n        },\n        remove: {\n          prompt: function (identifier) {\n            var $field = module.get.field(identifier),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.children(selector.prompt);\n            $fieldGroup.removeClass(className.error);\n\n            if (settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n\n              if (settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function () {\n                  $prompt.remove();\n                });\n              } else {\n                $prompt.fadeOut(settings.duration, function () {\n                  $prompt.remove();\n                });\n              }\n            }\n          }\n        },\n        set: {\n          success: function () {\n            $module.removeClass(className.error).addClass(className.success);\n          },\n          defaults: function () {\n            $field.each(function () {\n              var $field = $(this),\n                  isCheckbox = $field.filter(selector.checkbox).length > 0,\n                  value = isCheckbox ? $field.is(':checked') : $field.val();\n              $field.data(metadata.defaultValue, value);\n            });\n          },\n          error: function () {\n            $module.removeClass(className.success).addClass(className.error);\n          },\n          value: function (field, value) {\n            var fields = {};\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if ($.isEmptyObject(fields)) {\n              return;\n            }\n\n            $.each(fields, function (key, value) {\n              var $field = module.get.field(key),\n                  $element = $field.parent(),\n                  isMultiple = $.isArray(value),\n                  isCheckbox = $element.is(selector.uiCheckbox),\n                  isDropdown = $element.is(selector.uiDropdown),\n                  isRadio = $field.is(selector.radio) && isCheckbox,\n                  fieldExists = $field.length > 0,\n                  $multipleField;\n\n              if (fieldExists) {\n                if (isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function (index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element = $multipleField.parent();\n\n                    if ($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                } else if (isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]').parent(selector.uiCheckbox).checkbox('check');\n                } else if (isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n\n                  if (value === true) {\n                    $element.checkbox('check');\n                  } else {\n                    $element.checkbox('uncheck');\n                  }\n                } else if (isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                } else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n        validate: {\n          form: function (event, ignoreCallbacks) {\n            var values = module.get.values(),\n                apiRequest; // input keydown event will fire submit repeatedly by browser default\n\n            if (keyHeldDown) {\n              return false;\n            } // reset errors\n\n\n            formErrors = [];\n\n            if (module.is.valid()) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n\n              if (ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            } else {\n              module.debug('Form has errors');\n              module.set.error();\n\n              if (!settings.inline) {\n                module.add.errors(formErrors);\n              } // prevent ajax submit\n\n\n              if ($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n\n              if (ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n          // takes a validation object and returns whether field passes validation\n          field: function (field, fieldName) {\n            var identifier = field.identifier || fieldName,\n                $field = module.get.field(identifier),\n                $dependsField = field.depends ? module.get.field(field.depends) : false,\n                fieldValid = true,\n                fieldErrors = [];\n\n            if (!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n\n            if ($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            } else if (field.optional && module.is.blank($field)) {\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            } else if (field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            } else if (field.rules !== undefined) {\n              $.each(field.rules, function (index, rule) {\n                if (module.has.field(identifier) && !module.validate.rule(field, rule)) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n\n            if (fieldValid) {\n              module.remove.prompt(identifier, fieldErrors);\n              settings.onValid.call($field);\n            } else {\n              formErrors = formErrors.concat(fieldErrors);\n              module.add.prompt(identifier, fieldErrors);\n              settings.onInvalid.call($field, fieldErrors);\n              return false;\n            }\n\n            return true;\n          },\n          // takes validation rule and returns whether field passes rule\n          rule: function (field, rule) {\n            var $field = module.get.field(field.identifier),\n                type = rule.type,\n                value = $field.val(),\n                isValid = true,\n                ancillary = module.get.ancillaryValue(rule),\n                ruleName = module.get.ruleName(rule),\n                ruleFunction = settings.rules[ruleName];\n\n            if (!$.isFunction(ruleFunction)) {\n              module.error(error.noRule, ruleName);\n              return;\n            } // cast to string avoiding encoding special values\n\n\n            value = value === undefined || value === '' || value === null ? '' : $.trim(value + '');\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n        setting: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            settings[name] = value;\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (!settings.silent && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (!settings.silent && settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          if (!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n      module.initialize();\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.form.settings = {\n    name: 'Form',\n    namespace: 'form',\n    debug: false,\n    verbose: false,\n    performance: true,\n    fields: false,\n    keyboardShortcuts: true,\n    on: 'submit',\n    inline: false,\n    delay: 200,\n    revalidate: true,\n    transition: 'scale',\n    duration: 200,\n    onValid: function () {},\n    onInvalid: function () {},\n    onSuccess: function () {\n      return true;\n    },\n    onFailure: function () {\n      return false;\n    },\n    metadata: {\n      defaultValue: 'default',\n      validate: 'validate'\n    },\n    regExp: {\n      bracket: /\\[(.*)\\]/i,\n      decimal: /^\\d*(\\.)\\d+/,\n      email: /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n      escape: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n      flags: /^\\/(.*)\\/(.*)?/,\n      integer: /^\\-?\\d+$/,\n      number: /^\\-?\\d*(\\.\\d+)?$/,\n      url: /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n    },\n    text: {\n      unspecifiedRule: 'Please enter a valid value',\n      unspecifiedField: 'This field'\n    },\n    prompt: {\n      empty: '{name} must have a value',\n      checked: '{name} must be checked',\n      email: '{name} must be a valid e-mail',\n      url: '{name} must be a valid url',\n      regExp: '{name} is not formatted correctly',\n      integer: '{name} must be an integer',\n      decimal: '{name} must be a decimal number',\n      number: '{name} must be set to a number',\n      is: '{name} must be \"{ruleValue}\"',\n      isExactly: '{name} must be exactly \"{ruleValue}\"',\n      not: '{name} cannot be set to \"{ruleValue}\"',\n      notExactly: '{name} cannot be set to exactly \"{ruleValue}\"',\n      contain: '{name} cannot contain \"{ruleValue}\"',\n      containExactly: '{name} cannot contain exactly \"{ruleValue}\"',\n      doesntContain: '{name} must contain  \"{ruleValue}\"',\n      doesntContainExactly: '{name} must contain exactly \"{ruleValue}\"',\n      minLength: '{name} must be at least {ruleValue} characters',\n      length: '{name} must be at least {ruleValue} characters',\n      exactLength: '{name} must be exactly {ruleValue} characters',\n      maxLength: '{name} cannot be longer than {ruleValue} characters',\n      match: '{name} must match {ruleValue} field',\n      different: '{name} must have a different value than {ruleValue} field',\n      creditCard: '{name} must be a valid credit card number',\n      minCount: '{name} must have at least {ruleValue} choices',\n      exactCount: '{name} must have exactly {ruleValue} choices',\n      maxCount: '{name} must have {ruleValue} or less choices'\n    },\n    selector: {\n      checkbox: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n      clear: '.clear',\n      field: 'input, textarea, select',\n      group: '.field',\n      input: 'input',\n      message: '.error.message',\n      prompt: '.prompt.label',\n      radio: 'input[type=\"radio\"]',\n      reset: '.reset:not([type=\"reset\"])',\n      submit: '.submit:not([type=\"submit\"])',\n      uiCheckbox: '.ui.checkbox',\n      uiDropdown: '.ui.dropdown'\n    },\n    className: {\n      error: 'error',\n      label: 'ui prompt label',\n      pressed: 'down',\n      success: 'success'\n    },\n    error: {\n      identifier: 'You must specify a string identifier for each field',\n      method: 'The method you called is not defined.',\n      noRule: 'There is no rule matching the one you specified',\n      oldSyntax: 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n    },\n    templates: {\n      // template that produces error message\n      error: function (errors) {\n        var html = '<ul class=\"list\">';\n        $.each(errors, function (index, value) {\n          html += '<li>' + value + '</li>';\n        });\n        html += '</ul>';\n        return $(html);\n      },\n      // template that produces label\n      prompt: function (errors) {\n        return $('<div/>').addClass('ui basic red pointing prompt label').html(errors[0]);\n      }\n    },\n    rules: {\n      // is not empty or blank string\n      empty: function (value) {\n        return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n      },\n      // checkbox checked\n      checked: function () {\n        return $(this).filter(':checked').length > 0;\n      },\n      // is most likely an email\n      email: function (value) {\n        return $.fn.form.settings.regExp.email.test(value);\n      },\n      // value is most likely url\n      url: function (value) {\n        return $.fn.form.settings.regExp.url.test(value);\n      },\n      // matches specified regExp\n      regExp: function (value, regExp) {\n        var regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n            flags; // regular expression specified as /baz/gi (flags)\n\n        if (regExpParts) {\n          regExp = regExpParts.length >= 2 ? regExpParts[1] : regExp;\n          flags = regExpParts.length >= 3 ? regExpParts[2] : '';\n        }\n\n        return value.match(new RegExp(regExp, flags));\n      },\n      // is valid integer or matches range\n      integer: function (value, range) {\n        var intRegExp = $.fn.form.settings.regExp.integer,\n            min,\n            max,\n            parts;\n\n        if (!range || ['', '..'].indexOf(range) !== -1) {// do nothing\n        } else if (range.indexOf('..') == -1) {\n          if (intRegExp.test(range)) {\n            min = max = range - 0;\n          }\n        } else {\n          parts = range.split('..', 2);\n\n          if (intRegExp.test(parts[0])) {\n            min = parts[0] - 0;\n          }\n\n          if (intRegExp.test(parts[1])) {\n            max = parts[1] - 0;\n          }\n        }\n\n        return intRegExp.test(value) && (min === undefined || value >= min) && (max === undefined || value <= max);\n      },\n      // is valid number (with decimal)\n      decimal: function (value) {\n        return $.fn.form.settings.regExp.decimal.test(value);\n      },\n      // is valid number\n      number: function (value) {\n        return $.fn.form.settings.regExp.number.test(value);\n      },\n      // is value (case insensitive)\n      is: function (value, text) {\n        text = typeof text == 'string' ? text.toLowerCase() : text;\n        value = typeof value == 'string' ? value.toLowerCase() : value;\n        return value == text;\n      },\n      // is value\n      isExactly: function (value, text) {\n        return value == text;\n      },\n      // value is not another value (case insensitive)\n      not: function (value, notValue) {\n        value = typeof value == 'string' ? value.toLowerCase() : value;\n        notValue = typeof notValue == 'string' ? notValue.toLowerCase() : notValue;\n        return value != notValue;\n      },\n      // value is not another value (case sensitive)\n      notExactly: function (value, notValue) {\n        return value != notValue;\n      },\n      // value contains text (insensitive)\n      contains: function (value, text) {\n        // escape regex characters\n        text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text, 'i')) !== -1;\n      },\n      // value contains text (case sensitive)\n      containsExactly: function (value, text) {\n        // escape regex characters\n        text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text)) !== -1;\n      },\n      // value contains text (insensitive)\n      doesntContain: function (value, text) {\n        // escape regex characters\n        text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text, 'i')) === -1;\n      },\n      // value contains text (case sensitive)\n      doesntContainExactly: function (value, text) {\n        // escape regex characters\n        text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text)) === -1;\n      },\n      // is at least string length\n      minLength: function (value, requiredLength) {\n        return value !== undefined ? value.length >= requiredLength : false;\n      },\n      // see rls notes for 2.0.6 (this is a duplicate of minLength)\n      length: function (value, requiredLength) {\n        return value !== undefined ? value.length >= requiredLength : false;\n      },\n      // is exactly length\n      exactLength: function (value, requiredLength) {\n        return value !== undefined ? value.length == requiredLength : false;\n      },\n      // is less than length\n      maxLength: function (value, maxLength) {\n        return value !== undefined ? value.length <= maxLength : false;\n      },\n      // matches another field\n      match: function (value, identifier) {\n        var $form = $(this),\n            matchingValue;\n\n        if ($('[data-validate=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[data-validate=\"' + identifier + '\"]').val();\n        } else if ($('#' + identifier).length > 0) {\n          matchingValue = $('#' + identifier).val();\n        } else if ($('[name=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '\"]').val();\n        } else if ($('[name=\"' + identifier + '[]\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '[]\"]');\n        }\n\n        return matchingValue !== undefined ? value.toString() == matchingValue.toString() : false;\n      },\n      // different than another field\n      different: function (value, identifier) {\n        // use either id or name of field\n        var $form = $(this),\n            matchingValue;\n\n        if ($('[data-validate=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[data-validate=\"' + identifier + '\"]').val();\n        } else if ($('#' + identifier).length > 0) {\n          matchingValue = $('#' + identifier).val();\n        } else if ($('[name=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '\"]').val();\n        } else if ($('[name=\"' + identifier + '[]\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '[]\"]');\n        }\n\n        return matchingValue !== undefined ? value.toString() !== matchingValue.toString() : false;\n      },\n      creditCard: function (cardNumber, cardTypes) {\n        var cards = {\n          visa: {\n            pattern: /^4/,\n            length: [16]\n          },\n          amex: {\n            pattern: /^3[47]/,\n            length: [15]\n          },\n          mastercard: {\n            pattern: /^5[1-5]/,\n            length: [16]\n          },\n          discover: {\n            pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length: [16]\n          },\n          unionPay: {\n            pattern: /^(62|88)/,\n            length: [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern: /^35(2[89]|[3-8][0-9])/,\n            length: [16]\n          },\n          maestro: {\n            pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length: [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern: /^(30[0-5]|^36)/,\n            length: [14]\n          },\n          laser: {\n            pattern: /^(6304|670[69]|6771)/,\n            length: [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern: /^(4026|417500|4508|4844|491(3|7))/,\n            length: [16]\n          }\n        },\n            valid = {},\n            validCard = false,\n            requiredTypes = typeof cardTypes == 'string' ? cardTypes.split(',') : false,\n            unionPay,\n            validation;\n\n        if (typeof cardNumber !== 'string' || cardNumber.length === 0) {\n          return;\n        } // verify card types\n\n\n        if (requiredTypes) {\n          $.each(requiredTypes, function (index, type) {\n            // verify each card type\n            validation = cards[type];\n\n            if (validation) {\n              valid = {\n                length: $.inArray(cardNumber.length, validation.length) !== -1,\n                pattern: cardNumber.search(validation.pattern) !== -1\n              };\n\n              if (valid.length && valid.pattern) {\n                validCard = true;\n              }\n            }\n          });\n\n          if (!validCard) {\n            return false;\n          }\n        } // skip luhn for UnionPay\n\n\n        unionPay = {\n          number: $.inArray(cardNumber.length, cards.unionPay.length) !== -1,\n          pattern: cardNumber.search(cards.unionPay.pattern) !== -1\n        };\n\n        if (unionPay.number && unionPay.pattern) {\n          return true;\n        } // verify luhn, adapted from  <https://gist.github.com/2134376>\n\n\n        var length = cardNumber.length,\n            multiple = 0,\n            producedValue = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\n            sum = 0;\n\n        while (length--) {\n          sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n          multiple ^= 1;\n        }\n\n        return sum % 10 === 0 && sum > 0;\n      },\n      minCount: function (value, minCount) {\n        if (minCount == 0) {\n          return true;\n        }\n\n        if (minCount == 1) {\n          return value !== '';\n        }\n\n        return value.split(',').length >= minCount;\n      },\n      exactCount: function (value, exactCount) {\n        if (exactCount == 0) {\n          return value === '';\n        }\n\n        if (exactCount == 1) {\n          return value !== '' && value.search(',') === -1;\n        }\n\n        return value.split(',').length == exactCount;\n      },\n      maxCount: function (value, maxCount) {\n        if (maxCount == 0) {\n          return false;\n        }\n\n        if (maxCount == 1) {\n          return value.search(',') === -1;\n        }\n\n        return value.split(',').length <= maxCount;\n      }\n    }\n  };\n})(jQuery, window, document);","ast":null,"map":{"version":3,"sources":["/client/lib/semantic-ui/definitions/behaviors/form.js"],"names":["$","window","document","undefined","Math","self","Function","fn","form","parameters","$allModules","moduleSelector","selector","time","Date","getTime","performance","query","arguments","legacyParameters","methodInvoked","queryArguments","slice","call","returnedValue","each","$module","element","formErrors","keyHeldDown","$field","$group","$message","$prompt","$submit","$clear","$reset","settings","validation","metadata","className","error","namespace","moduleNamespace","eventNamespace","instance","module","initialize","get","instantiate","invoke","verbose","bindEvents","set","defaults","data","destroy","removeEvents","removeData","refresh","find","field","group","message","prompt","submit","clear","reset","attachEvents","action","on","event","preventDefault","validate","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","change","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","isErrored","hasClass","removeClass","remove","dropdown","val","bracketedRule","rule","match","regExp","bracket","empty","length","blank","trim","valid","allValid","fieldName","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","debug","validationRules","revalidate","clearTimeout","timer","setTimeout","delay","ancillaryValue","ruleName","replace","createElement","oninput","onpropertychange","ancillary","text","unspecifiedRule","requiresValue","search","requiresName","$label","name","identifier","eq","unspecifiedField","isPlainObject","keys","Object","isLegacySettings","rules","ruleKeys","extend","oldSyntax","fields","isArray","index","push","filter","$fields","add","fieldValidation","value","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","duration","fadeIn","fadeOut","success","isEmptyObject","fieldExists","$multipleField","ignoreCallbacks","apiRequest","onSuccess","stopImmediatePropagation","onFailure","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","isValid","ruleFunction","isFunction","noRule","setting","internal","silent","log","prototype","bind","console","info","apply","currentTime","executionTime","previousTime","display","title","totalTime","table","groupCollapsed","groupEnd","passedArguments","context","object","maxDepth","found","response","split","depth","camelCaseValue","charAt","toUpperCase","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","method","test","regExpParts","RegExp","range","intRegExp","min","max","parts","toLowerCase","notValue","contains","containsExactly","requiredLength","$form","matchingValue","toString","cardNumber","cardTypes","cards","visa","pattern","amex","mastercard","discover","unionPay","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","jQuery"],"mappings":"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","file":"/client/lib/semantic-ui/definitions/behaviors/form.js.map","sourcesContent":["/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.2.1\n*/\n/*!\n * # Semantic UI - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.form = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function() {\n            var\n              allValid = true\n            ;\n            module.verbose('Checking if form is valid');\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || !module.is.bracketedRule(rule)) {\n              return false;\n            }\n            return rule.type.match(settings.regExp.bracket)[1] + '';\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              $field,\n              name\n            ;\n            if(requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields) {\n                  ruleKeys = Object.keys(parameters.fields);\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\n                    $.each(parameters.fields, function(name, rules) {\n                      if(typeof rules == 'string') {\n                        rules = [rules];\n                      }\n                      parameters.fields[name] = {\n                        rules: []\n                      };\n                      $.each(rules, function(index, rule) {\n                        parameters.fields[name].rules.push({ type: rule });\n                      });\n                    });\n                  }\n                }\n\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            if( $field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(isChecked) {\n                      values[name] = value;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if( $field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        add: {\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.is.valid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName) {\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              module.remove.prompt(identifier, fieldErrors);\n              settings.onValid.call($field);\n            }\n            else {\n              formErrors = formErrors.concat(fieldErrors);\n              module.add.prompt(identifier, fieldErrors);\n              settings.onInvalid.call($field, fieldErrors);\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d*(\\.)\\d+/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} cannot contain \"{ruleValue}\"',\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return $.fn.form.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return $.fn.form.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      var\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = $.fn.form.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return $.fn.form.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return $.fn.form.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n"]},"hash":"90b014b75c895197630e13c57fbeebcfb8a0dd2e"}
