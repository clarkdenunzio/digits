{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js","filenameRelative":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js.map","sourceFileName":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"quickForm"},"ignored":false,"code":"Template.quickForm_semanticUI.helpers({\n  fieldGroupLabel: function () {\n    var name = this.name; // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n\n    if (!Number.isNaN(parseInt(name.substr(0, 2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    } // if SimpleSchema.defaultLabel is defined, use it\n\n\n    if (typeof SimpleSchema.defaultLabel === \"function\") {\n      return SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts: function () {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, \"id-prefix\");\n  },\n  submitButtonAtts: function () {\n    var qfAtts = this.atts;\n    var atts = {};\n\n    if (typeof qfAtts.buttonClasses === \"string\") {\n      atts[\"class\"] = qfAtts.buttonClasses;\n    } else {\n      atts[\"class\"] = \"ui positive submit button\";\n    }\n\n    return atts;\n  },\n  qfAutoFormContext: function () {\n    var ctx = _.clone(this.qfAutoFormContext || {});\n\n    ctx = AutoForm.Utility.addClass(ctx, \"ui form\");\n    delete ctx[\"id-prefix\"];\n    return ctx;\n  }\n});","ast":null,"map":{"version":3,"sources":["/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js"],"names":["Template","quickForm_semanticUI","helpers","fieldGroupLabel","name","Number","isNaN","parseInt","substr","charAt","SimpleSchema","defaultLabel","toUpperCase","slice","quickFieldsAtts","_","pick","atts","submitButtonAtts","qfAtts","buttonClasses","qfAutoFormContext","ctx","clone","AutoForm","Utility","addClass"],"mappings":"AAAAA,SAASC,oBAAT,CAA8BC,OAA9B,CAAsC;AACpCC,iBADoC,cAClB;AAChB,QAAIC,OAAO,KAAKA,IAAhB,CADgB,CAGhB;;AACA,QAAI,CAAEC,OAAOC,KAAP,CAAaC,SAASH,KAAKI,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAT,EAA2B,EAA3B,CAAb,CAAF,IAAkDJ,KAAKK,MAAL,CAAY,CAAZ,MAAmB,GAAzE,EAA8E;AAC5EL,aAAOA,KAAKI,MAAL,CAAY,CAAZ,CAAP;AACD,KANe,CAQhB;;;AACA,QAAI,OAAOE,aAAaC,YAApB,KAAqC,UAAzC,EAAqD;AACnD,aAAOD,aAAaC,YAAb,CAA0BP,IAA1B,CAAP;AACD,KAFD,MAEO;AACL;AACA,aAAOA,KAAKK,MAAL,CAAY,CAAZ,EAAeG,WAAf,KAA+BR,KAAKS,KAAL,CAAW,CAAX,CAAtC;AACD;AACF,GAhBmC;AAiBpCC,iBAjBoC,cAiBlB;AAChB;AACA;AACA,WAAOC,EAAEC,IAAF,CAAO,KAAKC,IAAZ,EAAkB,WAAlB,CAAP;AACD,GArBmC;AAsBpCC,kBAtBoC,cAsBjB;AACjB,QAAIC,SAAS,KAAKF,IAAlB;AACA,QAAIA,OAAO,EAAX;;AAEA,QAAI,OAAOE,OAAOC,aAAd,KAAgC,QAApC,EAA8C;AAC5CH,WAAK,OAAL,IAAgBE,OAAOC,aAAvB;AACD,KAFD,MAEO;AACLH,WAAK,OAAL,IAAgB,2BAAhB;AACD;;AAED,WAAOA,IAAP;AACD,GAjCmC;AAkCpCI,mBAlCoC,cAkChB;AAClB,QAAIC,MAAMP,EAAEQ,KAAF,CAAQ,KAAKF,iBAAL,IAA0B,EAAlC,CAAV;;AAEAC,UAAME,SAASC,OAAT,CAAiBC,QAAjB,CAA0BJ,GAA1B,EAA+B,SAA/B,CAAN;AAEA,WAAOA,IAAI,WAAJ,CAAP;AAEA,WAAOA,GAAP;AACD;AA1CmC,CAAtC","file":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js.map","sourcesContent":["Template.quickForm_semanticUI.helpers({\n  fieldGroupLabel() {\n    let name = this.name;\n\n    // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n    if (! Number.isNaN(parseInt(name.substr(0,2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    }\n\n    // if SimpleSchema.defaultLabel is defined, use it\n    if (typeof SimpleSchema.defaultLabel === \"function\") {\n      return SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts() {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, \"id-prefix\");\n  },\n  submitButtonAtts() {\n    let qfAtts = this.atts;\n    let atts = {};\n\n    if (typeof qfAtts.buttonClasses === \"string\") {\n      atts[\"class\"] = qfAtts.buttonClasses;\n    } else {\n      atts[\"class\"] = \"ui positive submit button\";\n    }\n\n    return atts;\n  },\n  qfAutoFormContext() {\n    let ctx = _.clone(this.qfAutoFormContext || {});\n\n    ctx = AutoForm.Utility.addClass(ctx, \"ui form\");\n\n    delete ctx[\"id-prefix\"];\n\n    return ctx;\n  }\n});\n"]},"hash":"eb08f0b03d546e1311ae9f766ab91aea2e109beb"}
