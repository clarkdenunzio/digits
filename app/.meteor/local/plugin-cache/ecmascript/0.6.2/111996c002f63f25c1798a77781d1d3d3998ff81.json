{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js","filenameRelative":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js.map","sourceFileName":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"select"},"ignored":false,"code":"AutoForm.addInputType(\"select\", {\n\ttemplate: \"afSelect\",\n\tvalueOut: function () {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n\t\tstringArray: AutoForm.valueConverters.stringToStringArray,\n\t\tnumber: AutoForm.valueConverters.stringToNumber,\n\t\tnumberArray: AutoForm.valueConverters.stringToNumberArray,\n\t\tboolean: AutoForm.valueConverters.stringToBoolean,\n\t\tbooleanArray: AutoForm.valueConverters.stringToBooleanArray,\n\t\tdate: AutoForm.valueConverters.stringToDate,\n\t\tdateArray: AutoForm.valueConverters.stringToDateArray\n\t},\n\tcontextAdjust: function (context) {\n\t\t// can fix issues with some browsers selecting the firstOption instead of the selected option\n\t\tcontext.atts.autocomplete = \"off\"; // delete eventual option used in other templates\n\n\t\tdelete context.atts.firstOption;\n\n\t\tvar itemAtts = _.omit(context.atts, \"placeholder\"); // build items list\n\n\n\t\tcontext.items = [];\n\n\t\tvar buildItem = function (item) {\n\t\t\treturn {\n\t\t\t\tname: context.name,\n\t\t\t\tlabel: item.label,\n\t\t\t\ticon: item.icon || false,\n\t\t\t\tdescription: item.description || false,\n\t\t\t\tvalue: item.value,\n\t\t\t\thtmlAtts: _.extend({\n\t\t\t\t\t\"class\": \"item\"\n\t\t\t\t}, _.omit(item, \"label\", \"value\", \"icon\", \"circularLabel\", \"description\", \"itemGroup\", \"category\", \"items\")),\n\t\t\t\t// _id must be included because it is a special property that\n\t\t\t\t// #each uses to track unique list items when adding and removing them\n\t\t\t\t// See https://github.com/meteor/meteor/issues/2174\n\t\t\t\t//\n\t\t\t\t// The toString() is necessary because otherwise Spacebars evaluates\n\t\t\t\t// any string to 1 if the other values are numbers, and then considers\n\t\t\t\t// that a duplicate.\n\t\t\t\t// See https://github.com/aldeed/meteor-autoform/issues/656\n\t\t\t\t_id: item.value.toString(),\n\t\t\t\tatts: itemAtts\n\t\t\t};\n\t\t}; // Add all defined options\n\n\n\t\t_.each(context.selectOptions, function (item) {\n\t\t\tif (item.itemGroup) {\n\t\t\t\tvar subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\titemGroup: item.itemGroup,\n\t\t\t\t\titems: subItems\n\t\t\t\t});\n\t\t\t} else if (item.category) {\n\t\t\t\tvar _subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\tcategory: item.category,\n\t\t\t\t\titems: _subItems\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcontext.items.push(buildItem(item));\n\t\t\t}\n\t\t});\n\n\t\treturn context;\n\t}\n});\nTemplate.afSelect_semanticUI.helpers({\n\tdivAtts: function () {\n\t\tvar atts = {\n\t\t\t\"class\": \"ui dropdown\"\n\t\t}; // Add custom classes or default\n\n\t\tif (_.isString(this.atts.class)) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, this.atts.class);\n\t\t} else {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"fluid selection\");\n\t\t} // Add the disabled class if required\n\n\n\t\tif (this.atts.disabled === \"\") {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"disabled\");\n\t\t} // Add search class, also add selection for proper design\n\n\n\t\tif (this.atts.search || this.atts.fullTextSearch) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"search selection\");\n\t\t} // Add multiple class\n\n\n\t\tif (this.atts.multiple) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"multiple\");\n\t\t}\n\n\t\treturn atts;\n\t},\n\tinputAtts: function () {\n\t\treturn _.pick(this.atts, \"name\", \"id\", \"required\", \"data-schema-key\", \"autocomplete\", \"value\");\n\t},\n\tshowClearButton: function () {\n\t\treturn this.atts.required !== \"\" && !this.atts.multiple;\n\t}\n});\nTemplate.afSelect_semanticUI.events({\n\t\"click .ui.clear.button\": function (event, template) {\n\t\ttemplate.$(\".ui.dropdown\").dropdown(\"clear\").dropdown(\"hide\");\n\t}\n});\nTemplate.afSelect_semanticUI.onRendered(function () {\n\tvar node = this.$(this.firstNode);\n\tnode.dropdown(_.extend({\n\t\tfullTextSearch: this.data.atts.fullTextSearch || false,\n\t\tallowAdditions: this.data.atts.allowAdditions || false,\n\t\tmaxSelections: this.data.atts.maxSelections || false,\n\t\tallowCategorySelection: this.data.atts.allowCategorySelection || false,\n\t\tuseLabels: this.data.atts.useLabels === false ? false : true\n\t}, this.data.atts.settings));\n\tthis.autorun(function (c) {\n\t\tvar data = Template.currentData();\n\n\t\tif (data.value) {\n\t\t\tnode.dropdown(\"set selected\", data.value);\n\t\t\tc.stop();\n\t\t}\n\t});\n});","ast":null,"map":{"version":3,"sources":["/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js"],"names":["AutoForm","addInputType","template","valueOut","val","valueConverters","stringArray","stringToStringArray","number","stringToNumber","numberArray","stringToNumberArray","boolean","stringToBoolean","booleanArray","stringToBooleanArray","date","stringToDate","dateArray","stringToDateArray","contextAdjust","context","atts","autocomplete","firstOption","itemAtts","_","omit","items","buildItem","name","label","item","icon","description","value","htmlAtts","extend","_id","toString","each","selectOptions","itemGroup","subItems","map","push","category","Template","afSelect_semanticUI","helpers","divAtts","isString","class","Utility","addClass","disabled","search","fullTextSearch","multiple","inputAtts","pick","showClearButton","required","events","event","$","dropdown","onRendered","node","firstNode","data","allowAdditions","maxSelections","allowCategorySelection","useLabels","settings","autorun","c","currentData","stop"],"mappings":"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","file":"/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js.map","sourcesContent":["AutoForm.addInputType(\"select\", {\n\ttemplate: \"afSelect\",\n\tvalueOut() {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n    stringArray : AutoForm.valueConverters.stringToStringArray,\n    number      : AutoForm.valueConverters.stringToNumber,\n    numberArray : AutoForm.valueConverters.stringToNumberArray,\n    boolean     : AutoForm.valueConverters.stringToBoolean,\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,\n    date        : AutoForm.valueConverters.stringToDate,\n    dateArray   : AutoForm.valueConverters.stringToDateArray\n\t},\n\tcontextAdjust(context) {\n\t\t// can fix issues with some browsers selecting the firstOption instead of the selected option\n\t\tcontext.atts.autocomplete = \"off\";\n\n\t\t// delete eventual option used in other templates\n\t\tdelete context.atts.firstOption;\n\n\t\tlet itemAtts = _.omit(context.atts, \"placeholder\");\n\n\t\t// build items list\n\t\tcontext.items = [];\n\n\t\tlet buildItem = item => ({\n\t\t\tname       : context.name,\n\t\t\tlabel      : item.label,\n\t\t\ticon       : item.icon || false,\n\t\t\tdescription: item.description || false,\n\t\t\tvalue      : item.value,\n\t\t\thtmlAtts   : _.extend(\n\t\t\t\t{ class: \"item\" },\n\t\t\t\t_.omit(item, \"label\", \"value\", \"icon\", \"circularLabel\", \"description\", \"itemGroup\", \"category\", \"items\")\n\t\t\t),\n\t\t\t// _id must be included because it is a special property that\n\t\t\t// #each uses to track unique list items when adding and removing them\n\t\t\t// See https://github.com/meteor/meteor/issues/2174\n\t\t\t//\n\t\t\t// The toString() is necessary because otherwise Spacebars evaluates\n\t\t\t// any string to 1 if the other values are numbers, and then considers\n\t\t\t// that a duplicate.\n\t\t\t// See https://github.com/aldeed/meteor-autoform/issues/656\n\t\t\t_id        : item.value.toString(),\n\t\t\tatts       : itemAtts\n\t\t});\n\n\t\t// Add all defined options\n\t\t_.each(context.selectOptions, item => {\n\t\t\tif (item.itemGroup) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\titemGroup: item.itemGroup,\n\t\t\t\t\titems    : subItems\n\t\t\t\t});\n\t\t\t} else if (item.category) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\tcategory: item.category,\n\t\t\t\t\titems   : subItems\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcontext.items.push(buildItem(item));\n\t\t\t}\n\t\t});\n\n\t\treturn context;\n\t}\n});\n\nTemplate.afSelect_semanticUI.helpers({\n\tdivAtts() {\n\t\tlet atts = { class: \"ui dropdown\" };\n\n\t\t// Add custom classes or default\n\t\tif (_.isString(this.atts.class)) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, this.atts.class);\n\t\t} else {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"fluid selection\");\n\t\t}\n\n\t\t// Add the disabled class if required\n\t\tif (this.atts.disabled === \"\") {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"disabled\");\n\t\t}\n\n\t\t// Add search class, also add selection for proper design\n\t\tif (this.atts.search || this.atts.fullTextSearch) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"search selection\");\n\t\t}\n\n\t\t// Add multiple class\n\t\tif (this.atts.multiple) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"multiple\");\n\t\t}\n\n\t\treturn atts;\n\t},\n\tinputAtts() {\n\t\treturn _.pick(this.atts, \"name\", \"id\", \"required\", \"data-schema-key\", \"autocomplete\", \"value\");\n\t},\n\tshowClearButton() {\n\t\treturn this.atts.required !== \"\" && ! this.atts.multiple;\n\t}\n});\n\nTemplate.afSelect_semanticUI.events({\n\t\"click .ui.clear.button\"(event, template) {\n\t\ttemplate.$(\".ui.dropdown\").dropdown(\"clear\").dropdown(\"hide\");\n\t}\n});\n\nTemplate.afSelect_semanticUI.onRendered(function() {\n\tlet node = this.$(this.firstNode);\n\n\tnode.dropdown(_.extend({\n\t\tfullTextSearch        : this.data.atts.fullTextSearch || false,\n\t\tallowAdditions        : this.data.atts.allowAdditions || false,\n\t\tmaxSelections         : this.data.atts.maxSelections || false,\n\t\tallowCategorySelection: this.data.atts.allowCategorySelection || false,\n\t\tuseLabels             : this.data.atts.useLabels === false ? false : true\n\t}, this.data.atts.settings));\n\n  this.autorun((c) => {\n    let data = Template.currentData();\n\n    if (data.value) {\n\t\t\tnode.dropdown(\"set selected\", data.value);\n      c.stop();\n    }\n  });\n});\n"]},"hash":"111996c002f63f25c1798a77781d1d3d3998ff81"}
