{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/arillo:flow-router-helpers/client/helpers.coffee","filenameRelative":"/packages/arillo:flow-router-helpers/client/helpers.coffee","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/arillo:flow-router-helpers/client/helpers.coffee.map","sourceFileName":"/packages/arillo:flow-router-helpers/client/helpers.coffee","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"helpers"},"ignored":false,"code":"var FlowRouterHelpers,\n    currentRouteName,\n    currentRouteOption,\n    func,\n    helpers,\n    isSubReady,\n    name,\n    param,\n    pathFor,\n    queryParam,\n    subsReady,\n    urlFor,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\nsubsReady = function () {\n  var subs;\n  subs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\n  if (subs.length === 1) {\n    return FlowRouter.subsReady();\n  }\n\n  subs = subs.slice(0, subs.length - 1);\n  return _.reduce(subs, function (memo, sub) {\n    return memo && FlowRouter.subsReady(sub);\n  }, true);\n};\n\npathFor = function (path, view) {\n  var hashBang, query, ref;\n\n  if (view == null) {\n    view = {\n      hash: {}\n    };\n  }\n\n  if (!path) {\n    throw new Error('no path defined');\n  }\n\n  if (!view.hash) {\n    view = {\n      hash: view\n    };\n  }\n\n  if (((ref = path.hash) != null ? ref.route : void 0) != null) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n  hashBang = view.hash.hash ? view.hash.hash : '';\n  return FlowRouter.path(path, view.hash, query) + (hashBang ? \"#\" + hashBang : '');\n};\n\nurlFor = function (path, view) {\n  var relativePath;\n  relativePath = pathFor(path, view);\n  return Meteor.absoluteUrl(relativePath.substr(1));\n};\n\nparam = function (name) {\n  return FlowRouter.getParam(name);\n};\n\nqueryParam = function (key) {\n  return FlowRouter.getQueryParam(key);\n};\n\ncurrentRouteName = function () {\n  return FlowRouter.getRouteName();\n};\n\ncurrentRouteOption = function (optionName) {\n  return FlowRouter.current().route.options[optionName];\n};\n\nisSubReady = function (sub) {\n  if (sub) {\n    return FlowRouter.subsReady(sub);\n  }\n\n  return FlowRouter.subsReady();\n};\n\nhelpers = {\n  subsReady: subsReady,\n  pathFor: pathFor,\n  urlFor: urlFor,\n  param: param,\n  queryParam: queryParam,\n  currentRouteName: currentRouteName,\n  isSubReady: isSubReady,\n  currentRouteOption: currentRouteOption\n};\n\nif (Meteor.isClient) {\n  for (name in meteorBabelHelpers.sanitizeForInObject(helpers)) {\n    if (!hasProp.call(helpers, name)) continue;\n    func = helpers[name];\n    Template.registerHelper(name, func);\n  }\n}\n\nif (Meteor.isServer) {\n  FlowRouterHelpers = {\n    pathFor: pathFor,\n    urlFor: urlFor\n  };\n}","ast":null,"map":{"version":3,"sources":["/packages/arillo:flow-router-helpers/client/helpers.coffee"],"names":["FlowRouterHelpers","currentRouteName","currentRouteOption","func","helpers","isSubReady","name","param","pathFor","queryParam","subsReady","urlFor","slice","hasProp","hasOwnProperty","subs","arguments","length","call","FlowRouter","_","reduce","memo","sub","path","view","hashBang","query","ref","hash","Error","route","_qs","parse","relativePath","Meteor","absoluteUrl","substr","getParam","key","getQueryParam","getRouteName","optionName","current","options","isClient","Template","registerHelper","isServer"],"mappings":"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","file":"/packages/arillo:flow-router-helpers/client/helpers.coffee.map","sourcesContent":["var FlowRouterHelpers, currentRouteName, currentRouteOption, func, helpers, isSubReady, name, param, pathFor, queryParam, subsReady, urlFor,\n  slice = [].slice,\n  hasProp = {}.hasOwnProperty;\n\nsubsReady = function() {\n  var subs;\n  subs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n  if (subs.length === 1) {\n    return FlowRouter.subsReady();\n  }\n  subs = subs.slice(0, subs.length - 1);\n  return _.reduce(subs, function(memo, sub) {\n    return memo && FlowRouter.subsReady(sub);\n  }, true);\n};\n\npathFor = function(path, view) {\n  var hashBang, query, ref;\n  if (view == null) {\n    view = {\n      hash: {}\n    };\n  }\n  if (!path) {\n    throw new Error('no path defined');\n  }\n  if (!view.hash) {\n    view = {\n      hash: view\n    };\n  }\n  if (((ref = path.hash) != null ? ref.route : void 0) != null) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n  hashBang = view.hash.hash ? view.hash.hash : '';\n  return FlowRouter.path(path, view.hash, query) + (hashBang ? \"#\" + hashBang : '');\n};\n\nurlFor = function(path, view) {\n  var relativePath;\n  relativePath = pathFor(path, view);\n  return Meteor.absoluteUrl(relativePath.substr(1));\n};\n\nparam = function(name) {\n  return FlowRouter.getParam(name);\n};\n\nqueryParam = function(key) {\n  return FlowRouter.getQueryParam(key);\n};\n\ncurrentRouteName = function() {\n  return FlowRouter.getRouteName();\n};\n\ncurrentRouteOption = function(optionName) {\n  return FlowRouter.current().route.options[optionName];\n};\n\nisSubReady = function(sub) {\n  if (sub) {\n    return FlowRouter.subsReady(sub);\n  }\n  return FlowRouter.subsReady();\n};\n\nhelpers = {\n  subsReady: subsReady,\n  pathFor: pathFor,\n  urlFor: urlFor,\n  param: param,\n  queryParam: queryParam,\n  currentRouteName: currentRouteName,\n  isSubReady: isSubReady,\n  currentRouteOption: currentRouteOption\n};\n\nif (Meteor.isClient) {\n  for (name in helpers) {\n    if (!hasProp.call(helpers, name)) continue;\n    func = helpers[name];\n    Template.registerHelper(name, func);\n  }\n}\n\nif (Meteor.isServer) {\n  FlowRouterHelpers = {\n    pathFor: pathFor,\n    urlFor: urlFor\n  };\n}\n"]},"hash":"7b42034bd5601aba8bf4eacc4fd9883f57f79770"}
