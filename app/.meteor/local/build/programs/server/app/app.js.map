{"version":3,"sources":["meteor://ðŸ’»app/imports/api/stuff/index.js","meteor://ðŸ’»app/imports/api/stuff/stuff.js","meteor://ðŸ’»app/imports/startup/both/accounts-config.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/server/accounts.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/stuff.js","meteor://ðŸ’»app/server/main.js"],"names":["module","import","export","Stuff","StuffSchema","Mongo","v","SimpleSchema","Collection","name","label","type","String","optional","max","autoform","group","placeholder","quantity","Number","attachSchema","Meteor","Accounts","isClient","ui","config","passwordSignupFields","users","find","count","settings","defaultAccount","createUser","username","password","console","log","_","stuffSeeds","each","seedStuffs","stuff","insert"],"mappings":"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","file":"/app.js","sourcesContent":["import './stuff.js';\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\n/* eslint-disable object-shorthand */\n\nexport const Stuff = new Mongo.Collection('Stuff');\n\n/**\n * Create the schema for Stuff\n */\nexport const StuffSchema = new SimpleSchema({\n  name: {\n    label: 'Name',\n    type: String,\n    optional: false,\n    max: 20,\n    autoform: {\n      group: 'Stuff',\n      placeholder: 'Bicycle',\n    },\n  },\n  quantity: {\n    label: 'Quantity',\n    type: Number,\n    optional: false,\n    autoform: {\n      group: 'Stuff',\n      placeholder: '3',\n    },\n  },\n});\n\nStuff.attachSchema(StuffSchema);\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nif (Meteor.isClient) {\n  Accounts.ui.config({\n    passwordSignupFields: 'USERNAME_ONLY',\n  });\n}\n\n","import './accounts-config.js';\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\n/* eslint-disable no-console */\n\n/* When running app for first time, pass a settings file to set up a default user account. */\nif (Meteor.users.find().count() === 0) {\n  if (!!Meteor.settings.defaultAccount) {\n    Accounts.createUser({\n      username: Meteor.settings.defaultAccount.username,\n      password: Meteor.settings.defaultAccount.password,\n    });\n  } else {\n    console.log('No default user!  Please invoke meteor with a settings file.');\n  }\n}\n","import './accounts.js';\nimport './stuff.js';\n","import { Stuff } from '../../api/stuff/stuff.js';\nimport { _ } from 'meteor/underscore';\n\n/**\n * A list of Stuff to pre-fill the Collection.\n * @type {*[]}\n */\nconst stuffSeeds = [\n  { name: 'Basket', quantity: 3 },\n  { name: 'Bicycle', quantity: 2 },\n];\n\n/**\n * Initialize the Stuff collection if empty with seed data.\n */\nif (Stuff.find().count() === 0) {\n  _.each(stuffSeeds, function seedStuffs(stuff) {\n    Stuff.insert(stuff);\n  });\n}\n","import '/imports/startup/server';\nimport '/imports/startup/both';\nimport '/imports/api/stuff';\n"]}