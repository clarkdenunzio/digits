[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"fabienb4:autoform-semantic-ui\":{\"templates\":{\"semantic-ui\":{\"semantic-ui.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/semantic-ui.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/* global AutoForm */Template.autoForm.helpers({                                                                       // 1\n  atts: function () {                                                                                                  // 4\n    // After removing all of the props we know about, everything else should                                           // 5\n    // become a form attribute unless it's an array or object.                                                         // 6\n    var val = void 0,                                                                                                  // 7\n        htmlAttributes = {},                                                                                           // 7\n        context = this;                                                                                                // 7\n    context = AutoForm.Utility.addClass(context, \"ui form\");                                                           // 9\n    var removeProps = [\"schema\", \"collection\", \"validation\", \"doc\", \"resetOnSuccess\", \"type\", \"template\", \"autosave\", \"autosaveOnKeyup\", \"meteormethod\", \"filter\", \"autoConvert\", \"removeEmptyStrings\", \"trimStrings\"]; // Filter out any attributes that have a component prefix\n                                                                                                                       //\n    function hasComponentPrefix(prop) {                                                                                // 29\n      return _.any(AutoForm.Utility.componentTypeList, function (componentType) {                                      // 30\n        return prop.indexOf(componentType + \"-\") === 0;                                                                // 32\n      });                                                                                                              // 32\n    } // Filter out arrays and objects, which are obviously not meant to be                                            // 34\n    // HTML attributes.                                                                                                // 37\n                                                                                                                       //\n                                                                                                                       //\n    for (var prop in meteorBabelHelpers.sanitizeForInObject(context)) {                                                // 38\n      if (context.hasOwnProperty(prop) && !_.contains(removeProps, prop) && !hasComponentPrefix(prop)) {               // 39\n        val = context[prop];                                                                                           // 41\n                                                                                                                       //\n        if (!_.isArray(val) && !_.isObject(val)) {                                                                     // 43\n          htmlAttributes[prop] = val;                                                                                  // 44\n        }                                                                                                              // 45\n      }                                                                                                                // 46\n    } // By default, we add the `novalidate=\"novalidate\"` attribute to our form,                                       // 47\n    // unless the user passes `validation=\"browser\"`.                                                                  // 50\n                                                                                                                       //\n                                                                                                                       //\n    if (this.validation !== \"browser\" && !htmlAttributes.novalidate) {                                                 // 51\n      htmlAttributes.novalidate = \"novalidate\";                                                                        // 52\n    }                                                                                                                  // 53\n                                                                                                                       //\n    return htmlAttributes;                                                                                             // 55\n  }                                                                                                                    // 56\n});                                                                                                                    // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"components\":{\"quickForm\":{\"template.quickForm.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/quickForm/template.quickForm.js             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"quickForm_semanticUI\");                                                                          // 2\nTemplate[\"quickForm_semanticUI\"] = new Template(\"Template.quickForm_semanticUI\", (function() {                         // 3\n  var view = this;                                                                                                     // 4\n  return Blaze._TemplateWith(function() {                                                                              // 5\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"qfAutoFormContext\"));                                       // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 8\n      return [ \"\\n\\n    \", Spacebars.With(function() {                                                                 // 9\n        return Spacebars.call(view.lookup(\"grouplessFields\"));                                                         // 10\n      }, function() {                                                                                                  // 11\n        return [ \"\\n      \", Blaze._TemplateWith(function() {                                                          // 12\n          return Spacebars.call(view.lookup(\"quickFieldsAtts\"));                                                       // 13\n        }, function() {                                                                                                // 14\n          return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));                                              // 15\n        }), \"\\n    \" ];                                                                                                // 16\n      }), \"\\n\\n    \", Blaze.Each(function() {                                                                          // 17\n        return Spacebars.call(view.lookup(\"fieldGroups\"));                                                             // 18\n      }, function() {                                                                                                  // 19\n        return [ \"\\n      \", HTML.DIV({                                                                                // 20\n          class: \"ui segment af-fieldGroup\"                                                                            // 21\n        }, \"\\n        \", Spacebars.With(function() {                                                                   // 22\n          return Spacebars.call(view.lookup(\"fieldGroupLabel\"));                                                       // 23\n        }, function() {                                                                                                // 24\n          return [ \"\\n          \", HTML.DIV({                                                                          // 25\n            class: \"ui top attached label af-fieldGroup-heading\"                                                       // 26\n          }, Blaze.View(\"lookup:.\", function() {                                                                       // 27\n            return Spacebars.mustache(view.lookup(\".\"));                                                               // 28\n          })), \"\\n        \" ];                                                                                         // 29\n        }), \"\\n        \", Blaze._TemplateWith(function() {                                                             // 30\n          return Spacebars.call(view.lookup(\"quickFieldsAtts\"));                                                       // 31\n        }, function() {                                                                                                // 32\n          return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));                                              // 33\n        }), \"\\n      \"), \"\\n    \" ];                                                                                   // 34\n      }), \"\\n\\n    \", Blaze.If(function() {                                                                            // 35\n        return Spacebars.call(view.lookup(\"qfShouldRenderButton\"));                                                    // 36\n      }, function() {                                                                                                  // 37\n        return [ \"\\n      \", HTML.DIV({                                                                                // 38\n          class: \"field\"                                                                                               // 39\n        }, \"\\n        \", HTML.BUTTON(HTML.Attrs({                                                                      // 40\n          type: \"submit\"                                                                                               // 41\n        }, function() {                                                                                                // 42\n          return Spacebars.attrMustache(view.lookup(\"submitButtonAtts\"));                                              // 43\n        }), \"\\n        \", Spacebars.With(function() {                                                                  // 44\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"atts\", \"buttonContent\"));                            // 45\n        }, function() {                                                                                                // 46\n          return [ \"\\n          \", Blaze.View(\"lookup:.\", function() {                                                 // 47\n            return Spacebars.mustache(view.lookup(\".\"));                                                               // 48\n          }), \"\\n        \" ];                                                                                          // 49\n        }, function() {                                                                                                // 50\n          return \"\\n          Submit\\n        \";                                                                       // 51\n        }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                                    // 52\n      }), \"\\n  \" ];                                                                                                    // 53\n    });                                                                                                                // 54\n  });                                                                                                                  // 55\n}));                                                                                                                   // 56\n                                                                                                                       // 57\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"quickForm.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.quickForm_semanticUI.helpers({                                                                                // 1\n  fieldGroupLabel: function () {                                                                                       // 2\n    var name = this.name; // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix         // 3\n                                                                                                                       //\n    if (!Number.isNaN(parseInt(name.substr(0, 2), 10)) && name.charAt(2) === \"_\") {                                    // 6\n      name = name.substr(3);                                                                                           // 7\n    } // if SimpleSchema.defaultLabel is defined, use it                                                               // 8\n                                                                                                                       //\n                                                                                                                       //\n    if (typeof SimpleSchema.defaultLabel === \"function\") {                                                             // 11\n      return SimpleSchema.defaultLabel(name);                                                                          // 12\n    } else {                                                                                                           // 13\n      // else, just capitalise name                                                                                    // 14\n      return name.charAt(0).toUpperCase() + name.slice(1);                                                             // 15\n    }                                                                                                                  // 16\n  },                                                                                                                   // 17\n  quickFieldsAtts: function () {                                                                                       // 18\n    // These are the quickForm attributes that we want to forward to                                                   // 19\n    // the afQuickFields component.                                                                                    // 20\n    return _.pick(this.atts, \"id-prefix\");                                                                             // 21\n  },                                                                                                                   // 22\n  submitButtonAtts: function () {                                                                                      // 23\n    var qfAtts = this.atts;                                                                                            // 24\n    var atts = {};                                                                                                     // 25\n                                                                                                                       //\n    if (typeof qfAtts.buttonClasses === \"string\") {                                                                    // 27\n      atts[\"class\"] = qfAtts.buttonClasses;                                                                            // 28\n    } else {                                                                                                           // 29\n      atts[\"class\"] = \"ui positive submit button\";                                                                     // 30\n    }                                                                                                                  // 31\n                                                                                                                       //\n    return atts;                                                                                                       // 33\n  },                                                                                                                   // 34\n  qfAutoFormContext: function () {                                                                                     // 35\n    var ctx = _.clone(this.qfAutoFormContext || {});                                                                   // 36\n                                                                                                                       //\n    ctx = AutoForm.Utility.addClass(ctx, \"ui form\");                                                                   // 38\n    delete ctx[\"id-prefix\"];                                                                                           // 40\n    return ctx;                                                                                                        // 42\n  }                                                                                                                    // 43\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"afArrayField\":{\"template.afArrayField.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/afArrayField/template.afArrayField.js       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afArrayField_semanticUI\");                                                                       // 2\nTemplate[\"afArrayField_semanticUI\"] = new Template(\"Template.afArrayField_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.H4({                                                                                                   // 5\n    class: \"ui top attached block header\"                                                                              // 6\n  }, \"\\n    \", Blaze.View(\"lookup:afFieldLabelText\", function() {                                                      // 7\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 8\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")                                                            // 9\n    }));                                                                                                               // 10\n  }), \"\\n  \"), \"\\n  \", HTML.DIV({                                                                                      // 11\n    class: \"ui secondary bottom attached segment\"                                                                      // 12\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 13\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 14\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")                                                            // 15\n    }));                                                                                                               // 16\n  }, function() {                                                                                                      // 17\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 18\n      class: \"ui pointing red basic label\"                                                                             // 19\n    }, \"\\n        \", Blaze.View(\"lookup:afFieldMessage\", function() {                                                  // 20\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 21\n        name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")                                                          // 22\n      })));                                                                                                            // 23\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 24\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 25\n    return {                                                                                                           // 26\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")),                                           // 27\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),                                   // 28\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))                                    // 29\n    };                                                                                                                 // 30\n  }, function() {                                                                                                      // 31\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {                                      // 32\n      return [ \"\\n      \", HTML.DIV({                                                                                  // 33\n        class: \"field autoform-array-item\"                                                                             // 34\n      }, \"\\n        \", Blaze.If(function() {                                                                           // 35\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({                    // 36\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),                                                      // 37\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),                                              // 38\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")                                               // 39\n        }));                                                                                                           // 40\n      }, function() {                                                                                                  // 41\n        return [ \"\\n          \", HTML.DIV({                                                                            // 42\n          class: \"ui mini red corner label autoform-remove-item\"                                                       // 43\n        }, \"\\n            \", HTML.I({                                                                                  // 44\n          class: \"icon minus\"                                                                                          // 45\n        }), \"\\n          \"), \"\\n        \" ];                                                                           // 46\n      }), \"\\n        \", Blaze._TemplateWith(function() {                                                               // 47\n        return {                                                                                                       // 48\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),                                               // 49\n          label: Spacebars.call(false),                                                                                // 50\n          options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))                                                  // 51\n        };                                                                                                             // 52\n      }, function() {                                                                                                  // 53\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 54\n      }), \"\\n      \"), \"\\n    \" ];                                                                                     // 55\n    });                                                                                                                // 56\n  }), \"\\n    \", Blaze.If(function() {                                                                                  // 57\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({                        // 58\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"),                                                           // 59\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),                                                   // 60\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")                                                    // 61\n    }));                                                                                                               // 62\n  }, function() {                                                                                                      // 63\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 64\n      class: \"field\"                                                                                                   // 65\n    }, \"\\n        \", HTML.DIV({                                                                                        // 66\n      class: \"ui small green icon button autoform-add-item\",                                                           // 67\n      \"data-autoform-field\": function() {                                                                              // 68\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"));                                    // 69\n      },                                                                                                               // 70\n      \"data-autoform-mincount\": function() {                                                                           // 71\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"));                                // 72\n      },                                                                                                               // 73\n      \"data-autoform-maxcount\": function() {                                                                           // 74\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"));                                // 75\n      }                                                                                                                // 76\n    }, \"\\n          \", HTML.I({                                                                                        // 77\n      class: \"icon plus\"                                                                                               // 78\n    }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                                        // 79\n  }), \"\\n  \") ];                                                                                                       // 80\n}));                                                                                                                   // 81\n                                                                                                                       // 82\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"afFormGroup\":{\"template.afFormGroup.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/template.afFormGroup.js         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afFormGroup_semanticUI\");                                                                        // 2\nTemplate[\"afFormGroup_semanticUI\"] = new Template(\"Template.afFormGroup_semanticUI\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    class: function() {                                                                                                // 6\n      return [ Spacebars.mustache(view.lookup(\"afFormGroupClass\")), \" \", Spacebars.mustache(view.lookup(\"inputClass\")), \" field \", Spacebars.mustache(view.lookup(\"requiredClass\")), Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                  // 8\n          name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                // 9\n        }));                                                                                                           // 10\n      }, function() {                                                                                                  // 11\n        return \" error\";                                                                                               // 12\n      }) ];                                                                                                            // 13\n    }                                                                                                                  // 14\n  }, function() {                                                                                                      // 15\n    return Spacebars.attrMustache(view.lookup(\"afFormGroupAtts\"));                                                     // 16\n  }), \"\\n    \", Blaze.Unless(function() {                                                                              // 17\n    return Spacebars.call(view.lookup(\"skipLabel\"));                                                                   // 18\n  }, function() {                                                                                                      // 19\n    return [ \"\\n      \", HTML.LABEL(HTML.Attrs(function() {                                                            // 20\n      return Spacebars.attrMustache(view.lookup(\"afFieldLabelAtts\"));                                                  // 21\n    }), \"\\n        \", Blaze.If(function() {                                                                            // 22\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"labelText\"));                                             // 23\n    }, function() {                                                                                                    // 24\n      return [ \"\\n          \", Blaze.View(\"lookup:..labelText\", function() {                                           // 25\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"labelText\"));                                       // 26\n      }), \"\\n        \" ];                                                                                              // 27\n    }, function() {                                                                                                    // 28\n      return [ \"\\n          \", Blaze.View(\"lookup:afFieldLabelText\", function() {                                      // 29\n        return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                      // 30\n          name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                // 31\n        }));                                                                                                           // 32\n      }), \"\\n        \" ];                                                                                              // 33\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 34\n  }), \"\\n    \", Blaze.If(function() {                                                                                  // 35\n    return Spacebars.call(view.lookup(\"leftLabel\"));                                                                   // 36\n  }, function() {                                                                                                      // 37\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 38\n      class: \"ui label\"                                                                                                // 39\n    }, Blaze.View(\"lookup:leftLabel\", function() {                                                                     // 40\n      return Spacebars.mustache(view.lookup(\"leftLabel\"));                                                             // 41\n    })), \"\\n    \" ];                                                                                                   // 42\n  }, function() {                                                                                                      // 43\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 44\n      return Spacebars.call(view.lookup(\"leftIcon\"));                                                                  // 45\n    }, function() {                                                                                                    // 46\n      return [ \"\\n        \", HTML.I({                                                                                  // 47\n        class: function() {                                                                                            // 48\n          return [ Spacebars.mustache(view.lookup(\"leftIcon\")), \" icon\" ];                                             // 49\n        }                                                                                                              // 50\n      }), \"\\n      \" ];                                                                                                // 51\n    }), \"\\n    \" ];                                                                                                    // 52\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 53\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));                                        // 54\n  }, function() {                                                                                                      // 55\n    return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));                                                     // 56\n  }), \"\\n    \", Blaze.If(function() {                                                                                  // 57\n    return Spacebars.call(view.lookup(\"rightLabel\"));                                                                  // 58\n  }, function() {                                                                                                      // 59\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 60\n      class: \"ui label\"                                                                                                // 61\n    }, Blaze.View(\"lookup:rightLabel\", function() {                                                                    // 62\n      return Spacebars.mustache(view.lookup(\"rightLabel\"));                                                            // 63\n    })), \"\\n    \" ];                                                                                                   // 64\n  }, function() {                                                                                                      // 65\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 66\n      return Spacebars.call(view.lookup(\"rightIcon\"));                                                                 // 67\n    }, function() {                                                                                                    // 68\n      return [ \"\\n        \", HTML.I({                                                                                  // 69\n        class: function() {                                                                                            // 70\n          return [ Spacebars.mustache(view.lookup(\"rightIcon\")), \" icon\" ];                                            // 71\n        }                                                                                                              // 72\n      }), \"\\n      \" ];                                                                                                // 73\n    }), \"\\n    \" ];                                                                                                    // 74\n  }), \"\\n    \", Blaze.If(function() {                                                                                  // 75\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 76\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 77\n    }));                                                                                                               // 78\n  }, function() {                                                                                                      // 79\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 80\n      class: \"ui pointing red basic label\"                                                                             // 81\n    }, \"\\n        \", Blaze.View(\"lookup:afFieldMessage\", function() {                                                  // 82\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 83\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                  // 84\n      })));                                                                                                            // 85\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 86\n  }), \"\\n  \");                                                                                                         // 87\n}));                                                                                                                   // 88\n                                                                                                                       // 89\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"afFormGroup.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afFormGroup_semanticUI.helpers({                                                                              // 1\n  skipLabel: function () {                                                                                             // 2\n    var self = this;                                                                                                   // 3\n    var type = AutoForm.getInputType(self.afFieldInputAtts);                                                           // 4\n    return self.skipLabel || type === \"boolean-checkbox\";                                                              // 6\n  },                                                                                                                   // 7\n  requiredClass: function () {                                                                                         // 8\n    if (this.required) {                                                                                               // 9\n      return \"required\";                                                                                               // 10\n    }                                                                                                                  // 11\n  },                                                                                                                   // 12\n  inputClass: function () {                                                                                            // 13\n    var leftLabel = this.afFieldInputAtts.leftLabel;                                                                   // 14\n    var rightLabel = this.afFieldInputAtts.rightLabel;                                                                 // 15\n    var leftIcon = this.afFieldInputAtts.leftIcon;                                                                     // 16\n    var rightIcon = this.afFieldInputAtts.rightIcon;                                                                   // 17\n                                                                                                                       //\n    if (leftLabel || rightLabel || leftIcon || rightIcon) {                                                            // 19\n      var className = \"ui\";                                                                                            // 20\n                                                                                                                       //\n      if (leftLabel && rightIcon) {                                                                                    // 22\n        className += \" labeled icon\";                                                                                  // 23\n      } else if (leftIcon && rightLabel) {                                                                             // 24\n        className += \" left icon right labeled\";                                                                       // 25\n      } else if (leftLabel) {                                                                                          // 26\n        className += \" labeled\";                                                                                       // 27\n      } else if (rightLabel) {                                                                                         // 28\n        className += \" right labeled\";                                                                                 // 29\n      } else if (leftIcon) {                                                                                           // 30\n        className += \" left icon\";                                                                                     // 31\n      } else if (rightIcon) {                                                                                          // 32\n        className += \" icon\";                                                                                          // 33\n      }                                                                                                                // 34\n                                                                                                                       //\n      return className + \" fluid input\";                                                                               // 36\n    }                                                                                                                  // 37\n  },                                                                                                                   // 38\n  leftLabel: function () {                                                                                             // 39\n    return this.afFieldInputAtts.leftLabel;                                                                            // 40\n  },                                                                                                                   // 41\n  rightLabel: function () {                                                                                            // 42\n    return this.afFieldInputAtts.rightLabel;                                                                           // 43\n  },                                                                                                                   // 44\n  leftIcon: function () {                                                                                              // 45\n    return this.afFieldInputAtts.leftIcon;                                                                             // 46\n  },                                                                                                                   // 47\n  rightIcon: function () {                                                                                             // 48\n    return this.afFieldInputAtts.rightIcon;                                                                            // 49\n  }                                                                                                                    // 50\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"afObjectField\":{\"template.afObjectField.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/afObjectField/template.afObjectField.js     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afObjectField_semanticUI\");                                                                      // 2\nTemplate[\"afObjectField_semanticUI\"] = new Template(\"Template.afObjectField_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return [ Spacebars.With(function() {                                                                                 // 5\n    return Spacebars.dataMustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                      // 6\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 7\n    }));                                                                                                               // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n    \", HTML.H4({                                                                                       // 10\n      class: \"ui top attached block header\"                                                                            // 11\n    }, Blaze.View(\"lookup:.\", function() {                                                                             // 12\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 13\n    })), \"\\n  \" ];                                                                                                     // 14\n  }), \"\\n  \", HTML.DIV({                                                                                               // 15\n    class: function() {                                                                                                // 16\n      return [ \"ui secondary bottom attached segment form\", Blaze.If(function() {                                      // 17\n        return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                  // 18\n          name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                // 19\n        }));                                                                                                           // 20\n      }, function() {                                                                                                  // 21\n        return \" error\";                                                                                               // 22\n      }) ];                                                                                                            // 23\n    }                                                                                                                  // 24\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 25\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 26\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 27\n    }));                                                                                                               // 28\n  }, function() {                                                                                                      // 29\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 30\n      class: \"ui pointing red basic label\"                                                                             // 31\n    }, \"\\n        \", Blaze.View(\"lookup:afFieldMessage\", function() {                                                  // 32\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 33\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                  // 34\n      })));                                                                                                            // 35\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 36\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 37\n    return Spacebars.call(view.lookup(\"quickFieldsAtts\"));                                                             // 38\n  }, function() {                                                                                                      // 39\n    return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));                                                    // 40\n  }), \"\\n  \") ];                                                                                                       // 41\n}));                                                                                                                   // 42\n                                                                                                                       // 43\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"afObjectField.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/components/afObjectField/afObjectField.js              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afObjectField_semanticUI.helpers({                                                                            // 1\n  quickFieldsAtts: function () {                                                                                       // 2\n    return _.pick(this, \"name\", \"id-prefix\");                                                                          // 3\n  }                                                                                                                    // 4\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"inputTypes\":{\"basic-select\":{\"template.basic-select.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/template.basic-select.js       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afBasicSelect_semanticUI\");                                                                      // 2\nTemplate[\"afBasicSelect_semanticUI\"] = new Template(\"Template.afBasicSelect_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.SELECT(HTML.Attrs(function() {                                                                           // 5\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 6\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 7\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 10\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                              // 11\n    }, function() {                                                                                                    // 12\n      return [ \"\\n        \", HTML.OPTGROUP({                                                                           // 13\n        label: function() {                                                                                            // 14\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                      // 15\n        }                                                                                                              // 16\n      }, \"\\n          \", Blaze.Each(function() {                                                                       // 17\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                               // 18\n      }, function() {                                                                                                  // 19\n        return [ \"\\n            \", HTML.OPTION(HTML.Attrs(function() {                                                 // 20\n          return Spacebars.attrMustache(view.lookup(\"afSelectOptionAtts\"));                                            // 21\n        }), Blaze.View(\"lookup:..label\", function() {                                                                  // 22\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                         // 23\n        })), \"\\n          \" ];                                                                                         // 24\n      }), \"\\n        \"), \"\\n      \" ];                                                                                 // 25\n    }, function() {                                                                                                    // 26\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {                                                       // 27\n        return Spacebars.attrMustache(view.lookup(\"afSelectOptionAtts\"));                                              // 28\n      }), Blaze.View(\"lookup:..label\", function() {                                                                    // 29\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                           // 30\n      })), \"\\n      \" ];                                                                                               // 31\n    }), \"\\n    \" ];                                                                                                    // 32\n  }), \"\\n  \");                                                                                                         // 33\n}));                                                                                                                   // 34\n                                                                                                                       // 35\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"basic-select.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/basic-select.js                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nAutoForm.addInputType(\"basic-select\", {                                                                                // 1\n  template: \"afBasicSelect\",                                                                                           // 2\n  valueOut: function () {                                                                                              // 3\n    return this.val();                                                                                                 // 4\n  },                                                                                                                   // 5\n  valueConverters: {                                                                                                   // 6\n    stringArray: AutoForm.valueConverters.stringToStringArray,                                                         // 7\n    number: AutoForm.valueConverters.stringToNumber,                                                                   // 8\n    numberArray: AutoForm.valueConverters.stringToNumberArray,                                                         // 9\n    boolean: AutoForm.valueConverters.stringToBoolean,                                                                 // 10\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,                                                       // 11\n    date: AutoForm.valueConverters.stringToDate,                                                                       // 12\n    dateArray: AutoForm.valueConverters.stringToDateArray                                                              // 13\n  },                                                                                                                   // 6\n  contextAdjust: function (context) {                                                                                  // 15\n    // can fix issues with some browsers selecting the firstOption instead of the selected option                      // 16\n    context.atts.autocomplete = \"off\";                                                                                 // 17\n                                                                                                                       //\n    var itemAtts = _.omit(context.atts, \"firstOption\");                                                                // 19\n                                                                                                                       //\n    var firstOption = context.atts.firstOption; // build items list                                                    // 20\n                                                                                                                       //\n    context.items = []; // If a firstOption was provided, add that to the items list first                             // 23\n                                                                                                                       //\n    if (firstOption !== false) {                                                                                       // 26\n      context.items.push({                                                                                             // 27\n        name: context.name,                                                                                            // 28\n        label: typeof firstOption === \"string\" ? firstOption : \"(Select One)\",                                         // 29\n        value: \"\",                                                                                                     // 30\n        // _id must be included because it is a special property that                                                  // 31\n        // #each uses to track unique list items when adding and removing them                                         // 32\n        // See https://github.com/meteor/meteor/issues/2174                                                            // 33\n        //                                                                                                             // 34\n        // Setting this to an empty string caused problems if option with value                                        // 35\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and                                           // 36\n        // considers that a duplicate.                                                                                 // 37\n        // See https://github.com/aldeed/meteor-autoform/issues/656                                                    // 38\n        _id: \"AUTOFORM_EMPTY_FIRST_OPTION\",                                                                            // 39\n        selected: false,                                                                                               // 40\n        atts: itemAtts                                                                                                 // 41\n      });                                                                                                              // 27\n    }                                                                                                                  // 43\n                                                                                                                       //\n    var buildOption = function (option) {                                                                              // 45\n      return {                                                                                                         // 45\n        name: context.name,                                                                                            // 46\n        label: option.label,                                                                                           // 47\n        value: option.value,                                                                                           // 48\n        htmlAtts: _.omit(option, \"label\", \"value\"),                                                                    // 49\n        // _id must be included because it is a special property that                                                  // 50\n        // #each uses to track unique list items when adding and removing them                                         // 51\n        // See https://github.com/meteor/meteor/issues/2174                                                            // 52\n        //                                                                                                             // 53\n        // The toString() is necessary because otherwise Spacebars evaluates                                           // 54\n        // any string to 1 if the other values are numbers, and then considers                                         // 55\n        // that a duplicate.                                                                                           // 56\n        // See https://github.com/aldeed/meteor-autoform/issues/656                                                    // 57\n        _id: option.value.toString(),                                                                                  // 58\n        selected: option.value === context.value,                                                                      // 59\n        atts: itemAtts                                                                                                 // 60\n      };                                                                                                               // 45\n    }; // Add all defined options                                                                                      // 45\n                                                                                                                       //\n                                                                                                                       //\n    _.each(context.selectOptions, function (option) {                                                                  // 64\n      if (option.optgroup) {                                                                                           // 65\n        var subOptions = _.map(option.items, buildOption);                                                             // 66\n                                                                                                                       //\n        context.items.push({                                                                                           // 68\n          optgroup: option.optgroup,                                                                                   // 69\n          items: subOptions                                                                                            // 70\n        });                                                                                                            // 68\n      } else {                                                                                                         // 72\n        context.items.push(buildOption(option));                                                                       // 73\n      }                                                                                                                // 74\n    });                                                                                                                // 75\n                                                                                                                       //\n    return context;                                                                                                    // 77\n  }                                                                                                                    // 78\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"boolean-checkbox\":{\"template.boolean-checkbox.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/template.boolean-checkbox. //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckbox_semanticUI\");                                                                         // 2\nTemplate[\"afCheckbox_semanticUI\"] = new Template(\"Template.afCheckbox_semanticUI\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: function() {                                                                                                // 6\n      return [ \"ui \", Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"checkboxType\")), \" checkbox\" ];           // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs({                                                                                 // 9\n    type: \"checkbox\",                                                                                                  // 10\n    value: function() {                                                                                                // 11\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 12\n    }                                                                                                                  // 13\n  }, function() {                                                                                                      // 14\n    return Spacebars.attrMustache(view.lookup(\"inputAtts\"));                                                           // 15\n  })), \"\\n    \", HTML.LABEL(Blaze.View(\"lookup:afFieldLabelText\", function() {                                         // 16\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 17\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 18\n    }));                                                                                                               // 19\n  })), \"\\n  \");                                                                                                        // 20\n}));                                                                                                                   // 21\n                                                                                                                       // 22\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"boolean-checkbox.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/boolean-checkbox.js        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckbox_semanticUI.onRendered(function () {                                                                // 1\n  this.$(this.firstNode).checkbox(this.data.atts.settings);                                                            // 2\n});                                                                                                                    // 3\nTemplate.afCheckbox_semanticUI.helpers({                                                                               // 5\n  inputAtts: function () {                                                                                             // 6\n    return _.omit(this.atts, \"checkboxType\");                                                                          // 7\n  }                                                                                                                    // 8\n});                                                                                                                    // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"button\":{\"template.button.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/button/template.button.js                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputButton_semanticUI\");                                                                      // 2\nTemplate[\"afInputButton_semanticUI\"] = new Template(\"Template.afInputButton_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"button\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"button.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/button/button.js                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputButton_semanticUI.helpers({                                                                            // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts); // Add semantic-ui class                                                            // 3\n                                                                                                                       //\n                                                                                                                       //\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");                                                               // 6\n    return atts;                                                                                                       // 8\n  }                                                                                                                    // 9\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"color\":{\"template.color.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/color/template.color.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputColor_semanticUI\");                                                                       // 2\nTemplate[\"afInputColor_semanticUI\"] = new Template(\"Template.afInputColor_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"color\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"date\":{\"template.date.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/date/template.date.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDate_semanticUI\");                                                                        // 2\nTemplate[\"afInputDate_semanticUI\"] = new Template(\"Template.afInputDate_semanticUI\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"date\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"datetime\":{\"template.datetime.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/datetime/template.datetime.js               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDateTime_semanticUI\");                                                                    // 2\nTemplate[\"afInputDateTime_semanticUI\"] = new Template(\"Template.afInputDateTime_semanticUI\", (function() {             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"datetime\",                                                                                                  // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"datetime-local\":{\"template.datetime-local.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/datetime-local/template.datetime-local.js   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDateTimeLocal_semanticUI\");                                                               // 2\nTemplate[\"afInputDateTimeLocal_semanticUI\"] = new Template(\"Template.afInputDateTimeLocal_semanticUI\", (function() {   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"datetime-local\",                                                                                            // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"email\":{\"template.email.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/email/template.email.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputEmail_semanticUI\");                                                                       // 2\nTemplate[\"afInputEmail_semanticUI\"] = new Template(\"Template.afInputEmail_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"email\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"month\":{\"template.month.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/month/template.month.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputMonth_semanticUI\");                                                                       // 2\nTemplate[\"afInputMonth_semanticUI\"] = new Template(\"Template.afInputMonth_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"month\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"number\":{\"template.number.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/number/template.number.js                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputNumber_semanticUI\");                                                                      // 2\nTemplate[\"afInputNumber_semanticUI\"] = new Template(\"Template.afInputNumber_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"number\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"password\":{\"template.password.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/password/template.password.js               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputPassword_semanticUI\");                                                                    // 2\nTemplate[\"afInputPassword_semanticUI\"] = new Template(\"Template.afInputPassword_semanticUI\", (function() {             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"password\",                                                                                                  // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"radio\":{\"template.radio.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/template.radio.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadio_semanticUI\");                                                                            // 2\nTemplate[\"afRadio_semanticUI\"] = new Template(\"Template.afRadio_semanticUI\", (function() {                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"ui radio checkbox\"                                                                                         // 6\n  }, \"\\n    \", HTML.LABEL(\"\\n      \", HTML.INPUT(HTML.Attrs({                                                          // 7\n    type: \"radio\",                                                                                                     // 8\n    value: function() {                                                                                                // 9\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 10\n    }                                                                                                                  // 11\n  }, function() {                                                                                                      // 12\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 13\n  })), \"\\n      \", Blaze.View(\"lookup:afFieldLabelText\", function() {                                                  // 14\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 15\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 16\n    }));                                                                                                               // 17\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 18\n}));                                                                                                                   // 19\n                                                                                                                       // 20\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"radio.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/radio.js                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadio_semanticUI.helpers({                                                                                  // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts);                                                                                     // 3\n                                                                                                                       //\n    if (this.selected) {                                                                                               // 5\n      atts.checked = \"\";                                                                                               // 6\n    }                                                                                                                  // 7\n                                                                                                                       //\n    return atts;                                                                                                       // 9\n  }                                                                                                                    // 10\n});                                                                                                                    // 1\nTemplate.afRadio_semanticUI.onRendered(function () {                                                                   // 13\n  this.$(this.firstNode).checkbox(this.data.atts.settings);                                                            // 14\n});                                                                                                                    // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"range\":{\"template.range.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/range/template.range.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputRange_semanticUI\");                                                                       // 2\nTemplate[\"afInputRange_semanticUI\"] = new Template(\"Template.afInputRange_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"range\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reset\":{\"template.reset.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/template.reset.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputReset_semanticUI\");                                                                       // 2\nTemplate[\"afInputReset_semanticUI\"] = new Template(\"Template.afInputReset_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"reset\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reset.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/reset.js                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputReset_semanticUI.helpers({                                                                             // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts); // Add semantic-ui class                                                            // 3\n                                                                                                                       //\n                                                                                                                       //\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");                                                               // 6\n    return atts;                                                                                                       // 8\n  }                                                                                                                    // 9\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"search\":{\"template.search.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/search/template.search.js                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputSearch_semanticUI\");                                                                      // 2\nTemplate[\"afInputSearch_semanticUI\"] = new Template(\"Template.afInputSearch_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"search\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"select\":{\"template.select.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select/template.select.js                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afSelect_semanticUI\");                                                                           // 2\nTemplate[\"afSelect_semanticUI\"] = new Template(\"Template.afSelect_semanticUI\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs(function() {                                                                              // 5\n    return Spacebars.attrMustache(view.lookup(\"divAtts\"));                                                             // 6\n  }), \"\\n    \", HTML.INPUT(HTML.Attrs({                                                                                // 7\n    type: \"hidden\",                                                                                                    // 8\n    value: function() {                                                                                                // 9\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 10\n    }                                                                                                                  // 11\n  }, function() {                                                                                                      // 12\n    return Spacebars.attrMustache(view.lookup(\"inputAtts\"));                                                           // 13\n  })), \"\\n    \", Blaze.If(function() {                                                                                 // 14\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"placeholder\"));                                     // 15\n  }, function() {                                                                                                      // 16\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 17\n      class: \"default text\"                                                                                            // 18\n    }, Blaze.View(\"lookup:..atts.placeholder\", function() {                                                            // 19\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"placeholder\"));                               // 20\n    })), \"\\n    \" ];                                                                                                   // 21\n  }, function() {                                                                                                      // 22\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 23\n      class: \"text\"                                                                                                    // 24\n    }), \"\\n    \" ];                                                                                                    // 25\n  }), HTML.Raw('\\n    <i class=\"dropdown icon\"></i>\\n    '), HTML.DIV({                                                // 26\n    class: \"menu\"                                                                                                      // 27\n  }, \"\\n      \", Blaze.If(function() {                                                                                 // 28\n    return Spacebars.call(view.lookup(\"showClearButton\"));                                                             // 29\n  }, function() {                                                                                                      // 30\n    return [ \"\\n        \", HTML.DIV({                                                                                  // 31\n      class: \"ui fluid compact clear button\"                                                                           // 32\n    }, HTML.I({                                                                                                        // 33\n      class: \"erase icon\"                                                                                              // 34\n    })), \"\\n      \" ];                                                                                                 // 35\n  }), \"\\n      \", Blaze.Each(function() {                                                                              // 36\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 37\n  }, function() {                                                                                                      // 38\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"afSelectRecursive\")), \"\\n      \" ];                  // 39\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 40\n}));                                                                                                                   // 41\n                                                                                                                       // 42\nTemplate.__checkName(\"afSelectRecursive\");                                                                             // 43\nTemplate[\"afSelectRecursive\"] = new Template(\"Template.afSelectRecursive\", (function() {                               // 44\n  var view = this;                                                                                                     // 45\n  return Blaze.If(function() {                                                                                         // 46\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"itemGroup\"));                                               // 47\n  }, function() {                                                                                                      // 48\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 49\n      class: \"header\"                                                                                                  // 50\n    }, Blaze.View(\"lookup:..itemGroup\", function() {                                                                   // 51\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"itemGroup\"));                                         // 52\n    })), \"\\n    \", Blaze.Each(function() {                                                                             // 53\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                 // 54\n    }, function() {                                                                                                    // 55\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"afSelectRecursive\")), \"\\n    \" ];                    // 56\n    }), \"\\n  \" ];                                                                                                      // 57\n  }, function() {                                                                                                      // 58\n    return [ \"\\n    \", Blaze.If(function() {                                                                           // 59\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"category\"));                                              // 60\n    }, function() {                                                                                                    // 61\n      return [ \"\\n      \", HTML.DIV({                                                                                  // 62\n        class: \"item\",                                                                                                 // 63\n        \"data-value\": function() {                                                                                     // 64\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"category\", \"value\"));                             // 65\n        }                                                                                                              // 66\n      }, \"\\n        \", HTML.I({                                                                                        // 67\n        class: \"dropdown icon\"                                                                                         // 68\n      }), \"\\n        \", HTML.SPAN({                                                                                    // 69\n        class: \"text\"                                                                                                  // 70\n      }, Blaze.View(\"lookup:..category.label\", function() {                                                            // 71\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"category\", \"label\"));                               // 72\n      })), \"\\n        \", HTML.DIV({                                                                                    // 73\n        class: \"menu\"                                                                                                  // 74\n      }, \"\\n          \", Blaze.Each(function() {                                                                       // 75\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                               // 76\n      }, function() {                                                                                                  // 77\n        return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"afSelectRecursive\")), \"\\n          \" ];      // 78\n      }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                                      // 79\n    }, function() {                                                                                                    // 80\n      return [ \"\\n      \", HTML.DIV(HTML.Attrs({                                                                       // 81\n        \"data-value\": function() {                                                                                     // 82\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                         // 83\n        }                                                                                                              // 84\n      }, function() {                                                                                                  // 85\n        return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"htmlAtts\"));                                    // 86\n      }), \"\\n        \", Blaze.If(function() {                                                                          // 87\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"icon\"));                                                // 88\n      }, function() {                                                                                                  // 89\n        return [ \"\\n          \", HTML.I({                                                                              // 90\n          class: function() {                                                                                          // 91\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\"));                                        // 92\n          }                                                                                                            // 93\n        }), \"\\n        \" ];                                                                                            // 94\n      }), \"\\n        \", Blaze.If(function() {                                                                          // 95\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"circularLabel\"));                                       // 96\n      }, function() {                                                                                                  // 97\n        return [ \"\\n          \", HTML.DIV({                                                                            // 98\n          class: function() {                                                                                          // 99\n            return [ \"ui \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"circularLabel\")), \" empty circular label\" ];\n          }                                                                                                            // 101\n        }), \"\\n        \" ];                                                                                            // 102\n      }), \"\\n        \", Blaze.If(function() {                                                                          // 103\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"description\"));                                         // 104\n      }, function() {                                                                                                  // 105\n        return [ \"\\n          \", HTML.SPAN({                                                                           // 106\n          class: \"description\"                                                                                         // 107\n        }, Blaze.View(\"lookup:..description\", function() {                                                             // 108\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"description\"));                                   // 109\n        })), \"\\n        \" ];                                                                                           // 110\n      }), \"\\n        \", Blaze.View(\"lookup:..label\", function() {                                                      // 111\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                           // 112\n      }), \"\\n      \"), \"\\n    \" ];                                                                                     // 113\n    }), \"\\n  \" ];                                                                                                      // 114\n  });                                                                                                                  // 115\n}));                                                                                                                   // 116\n                                                                                                                       // 117\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nAutoForm.addInputType(\"select\", {                                                                                      // 1\n\ttemplate: \"afSelect\",                                                                                                 // 2\n\tvalueOut: function () {                                                                                               // 3\n\t\treturn this.val();                                                                                                   // 4\n\t},                                                                                                                    // 5\n\tvalueConverters: {                                                                                                    // 6\n\t\tstringArray: AutoForm.valueConverters.stringToStringArray,                                                           // 7\n\t\tnumber: AutoForm.valueConverters.stringToNumber,                                                                     // 8\n\t\tnumberArray: AutoForm.valueConverters.stringToNumberArray,                                                           // 9\n\t\tboolean: AutoForm.valueConverters.stringToBoolean,                                                                   // 10\n\t\tbooleanArray: AutoForm.valueConverters.stringToBooleanArray,                                                         // 11\n\t\tdate: AutoForm.valueConverters.stringToDate,                                                                         // 12\n\t\tdateArray: AutoForm.valueConverters.stringToDateArray                                                                // 13\n\t},                                                                                                                    // 6\n\tcontextAdjust: function (context) {                                                                                   // 15\n\t\t// can fix issues with some browsers selecting the firstOption instead of the selected option                        // 16\n\t\tcontext.atts.autocomplete = \"off\"; // delete eventual option used in other templates                                 // 17\n                                                                                                                       //\n\t\tdelete context.atts.firstOption;                                                                                     // 20\n                                                                                                                       //\n\t\tvar itemAtts = _.omit(context.atts, \"placeholder\"); // build items list                                              // 22\n                                                                                                                       //\n                                                                                                                       //\n\t\tcontext.items = [];                                                                                                  // 25\n                                                                                                                       //\n\t\tvar buildItem = function (item) {                                                                                    // 27\n\t\t\treturn {                                                                                                            // 27\n\t\t\t\tname: context.name,                                                                                                // 28\n\t\t\t\tlabel: item.label,                                                                                                 // 29\n\t\t\t\ticon: item.icon || false,                                                                                          // 30\n\t\t\t\tdescription: item.description || false,                                                                            // 31\n\t\t\t\tvalue: item.value,                                                                                                 // 32\n\t\t\t\thtmlAtts: _.extend({                                                                                               // 33\n\t\t\t\t\t\"class\": \"item\"                                                                                                   // 34\n\t\t\t\t}, _.omit(item, \"label\", \"value\", \"icon\", \"circularLabel\", \"description\", \"itemGroup\", \"category\", \"items\")),      // 34\n\t\t\t\t// _id must be included because it is a special property that                                                      // 37\n\t\t\t\t// #each uses to track unique list items when adding and removing them                                             // 38\n\t\t\t\t// See https://github.com/meteor/meteor/issues/2174                                                                // 39\n\t\t\t\t//                                                                                                                 // 40\n\t\t\t\t// The toString() is necessary because otherwise Spacebars evaluates                                               // 41\n\t\t\t\t// any string to 1 if the other values are numbers, and then considers                                             // 42\n\t\t\t\t// that a duplicate.                                                                                               // 43\n\t\t\t\t// See https://github.com/aldeed/meteor-autoform/issues/656                                                        // 44\n\t\t\t\t_id: item.value.toString(),                                                                                        // 45\n\t\t\t\tatts: itemAtts                                                                                                     // 46\n\t\t\t};                                                                                                                  // 27\n\t\t}; // Add all defined options                                                                                        // 27\n                                                                                                                       //\n                                                                                                                       //\n\t\t_.each(context.selectOptions, function (item) {                                                                      // 50\n\t\t\tif (item.itemGroup) {                                                                                               // 51\n\t\t\t\tvar subItems = _.map(item.items, buildItem);                                                                       // 52\n                                                                                                                       //\n\t\t\t\tcontext.items.push({                                                                                               // 54\n\t\t\t\t\titemGroup: item.itemGroup,                                                                                        // 55\n\t\t\t\t\titems: subItems                                                                                                   // 56\n\t\t\t\t});                                                                                                                // 54\n\t\t\t} else if (item.category) {                                                                                         // 58\n\t\t\t\tvar _subItems = _.map(item.items, buildItem);                                                                      // 59\n                                                                                                                       //\n\t\t\t\tcontext.items.push({                                                                                               // 61\n\t\t\t\t\tcategory: item.category,                                                                                          // 62\n\t\t\t\t\titems: _subItems                                                                                                  // 63\n\t\t\t\t});                                                                                                                // 61\n\t\t\t} else {                                                                                                            // 65\n\t\t\t\tcontext.items.push(buildItem(item));                                                                               // 66\n\t\t\t}                                                                                                                   // 67\n\t\t});                                                                                                                  // 68\n                                                                                                                       //\n\t\treturn context;                                                                                                      // 70\n\t}                                                                                                                     // 71\n});                                                                                                                    // 1\nTemplate.afSelect_semanticUI.helpers({                                                                                 // 74\n\tdivAtts: function () {                                                                                                // 75\n\t\tvar atts = {                                                                                                         // 76\n\t\t\t\"class\": \"ui dropdown\"                                                                                              // 76\n\t\t}; // Add custom classes or default                                                                                  // 76\n                                                                                                                       //\n\t\tif (_.isString(this.atts.class)) {                                                                                   // 79\n\t\t\tatts = AutoForm.Utility.addClass(atts, this.atts.class);                                                            // 80\n\t\t} else {                                                                                                             // 81\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"fluid selection\");                                                          // 82\n\t\t} // Add the disabled class if required                                                                              // 83\n                                                                                                                       //\n                                                                                                                       //\n\t\tif (this.atts.disabled === \"\") {                                                                                     // 86\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"disabled\");                                                                 // 87\n\t\t} // Add search class, also add selection for proper design                                                          // 88\n                                                                                                                       //\n                                                                                                                       //\n\t\tif (this.atts.search || this.atts.fullTextSearch) {                                                                  // 91\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"search selection\");                                                         // 92\n\t\t} // Add multiple class                                                                                              // 93\n                                                                                                                       //\n                                                                                                                       //\n\t\tif (this.atts.multiple) {                                                                                            // 96\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"multiple\");                                                                 // 97\n\t\t}                                                                                                                    // 98\n                                                                                                                       //\n\t\treturn atts;                                                                                                         // 100\n\t},                                                                                                                    // 101\n\tinputAtts: function () {                                                                                              // 102\n\t\treturn _.pick(this.atts, \"name\", \"id\", \"required\", \"data-schema-key\", \"autocomplete\", \"value\");                      // 103\n\t},                                                                                                                    // 104\n\tshowClearButton: function () {                                                                                        // 105\n\t\treturn this.atts.required !== \"\" && !this.atts.multiple;                                                             // 106\n\t}                                                                                                                     // 107\n});                                                                                                                    // 74\nTemplate.afSelect_semanticUI.events({                                                                                  // 110\n\t\"click .ui.clear.button\": function (event, template) {                                                                // 111\n\t\ttemplate.$(\".ui.dropdown\").dropdown(\"clear\").dropdown(\"hide\");                                                       // 112\n\t}                                                                                                                     // 113\n});                                                                                                                    // 110\nTemplate.afSelect_semanticUI.onRendered(function () {                                                                  // 116\n\tvar node = this.$(this.firstNode);                                                                                    // 117\n\tnode.dropdown(_.extend({                                                                                              // 119\n\t\tfullTextSearch: this.data.atts.fullTextSearch || false,                                                              // 120\n\t\tallowAdditions: this.data.atts.allowAdditions || false,                                                              // 121\n\t\tmaxSelections: this.data.atts.maxSelections || false,                                                                // 122\n\t\tallowCategorySelection: this.data.atts.allowCategorySelection || false,                                              // 123\n\t\tuseLabels: this.data.atts.useLabels === false ? false : true                                                         // 124\n\t}, this.data.atts.settings));                                                                                         // 119\n\tthis.autorun(function (c) {                                                                                           // 127\n\t\tvar data = Template.currentData();                                                                                   // 128\n                                                                                                                       //\n\t\tif (data.value) {                                                                                                    // 130\n\t\t\tnode.dropdown(\"set selected\", data.value);                                                                          // 131\n\t\t\tc.stop();                                                                                                           // 132\n\t\t}                                                                                                                    // 133\n\t});                                                                                                                   // 134\n});                                                                                                                    // 135\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"select-checkbox\":{\"template.select-checkbox.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/template.select-checkbox.js //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckboxGroup_semanticUI\");                                                                    // 2\nTemplate[\"afCheckboxGroup_semanticUI\"] = new Template(\"Template.afCheckboxGroup_semanticUI\", (function() {             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    class: \"grouped fields\"                                                                                            // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n  \", Blaze.Each(function() {                                                                                  // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 12\n      class: \"field\"                                                                                                   // 13\n    }, \"\\n      \", HTML.DIV({                                                                                          // 14\n      class: \"ui checkbox\"                                                                                             // 15\n    }, \"\\n        \", HTML.INPUT(HTML.Attrs({                                                                           // 16\n      type: \"checkbox\",                                                                                                // 17\n      value: function() {                                                                                              // 18\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 19\n      }                                                                                                                // 20\n    }, function() {                                                                                                    // 21\n      return Spacebars.attrMustache(view.lookup(\"atts\"));                                                              // 22\n    })), \"\\n        \", HTML.LABEL(Blaze.View(\"lookup:label\", function() {                                              // 23\n      return Spacebars.mustache(view.lookup(\"label\"));                                                                 // 24\n    })), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                                                             // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select-checkbox.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/select-checkbox.js          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckboxGroup_semanticUI.helpers({                                                                          // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts);                                                                                     // 3\n                                                                                                                       //\n    if (this.selected) {                                                                                               // 5\n      atts.checked = \"checked\";                                                                                        // 6\n    } // remove data-schema-key attribute because we put it                                                            // 7\n    // on the entire group                                                                                             // 10\n                                                                                                                       //\n                                                                                                                       //\n    delete atts[\"data-schema-key\"];                                                                                    // 11\n    return atts;                                                                                                       // 13\n  },                                                                                                                   // 14\n  dsk: function () {                                                                                                   // 15\n    return {                                                                                                           // 16\n      \"data-schema-key\": this.atts[\"data-schema-key\"]                                                                  // 17\n    };                                                                                                                 // 16\n  }                                                                                                                    // 19\n});                                                                                                                    // 1\nTemplate.afCheckboxGroup_semanticUI.onRendered(function () {                                                           // 22\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);                                       // 23\n});                                                                                                                    // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"select-checkbox-inline\":{\"template.select-checkbox-inline.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/template.select-chec //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckboxGroupInline_semanticUI\");                                                              // 2\nTemplate[\"afCheckboxGroupInline_semanticUI\"] = new Template(\"Template.afCheckboxGroupInline_semanticUI\", (function() {\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    class: \"inline fields\"                                                                                             // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n  \", Blaze.Each(function() {                                                                                  // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 12\n      class: \"field\"                                                                                                   // 13\n    }, \"\\n      \", HTML.DIV({                                                                                          // 14\n      class: \"ui checkbox\"                                                                                             // 15\n    }, \"\\n        \", HTML.INPUT(HTML.Attrs({                                                                           // 16\n      type: \"checkbox\",                                                                                                // 17\n      value: function() {                                                                                              // 18\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 19\n      }                                                                                                                // 20\n    }, function() {                                                                                                    // 21\n      return Spacebars.attrMustache(view.lookup(\"atts\"));                                                              // 22\n    })), \"\\n        \", HTML.LABEL(Blaze.View(\"lookup:label\", function() {                                              // 23\n      return Spacebars.mustache(view.lookup(\"label\"));                                                                 // 24\n    })), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                                                             // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select-checkbox-inline.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/select-checkbox-inli //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckboxGroupInline_semanticUI.helpers({                                                                    // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts);                                                                                     // 3\n                                                                                                                       //\n    if (this.selected) {                                                                                               // 5\n      atts.checked = \"checked\";                                                                                        // 6\n    } // remove data-schema-key attribute because we put it                                                            // 7\n    // on the entire group                                                                                             // 10\n                                                                                                                       //\n                                                                                                                       //\n    delete atts[\"data-schema-key\"];                                                                                    // 11\n    return atts;                                                                                                       // 13\n  },                                                                                                                   // 14\n  dsk: function () {                                                                                                   // 15\n    return {                                                                                                           // 16\n      \"data-schema-key\": this.atts[\"data-schema-key\"]                                                                  // 17\n    };                                                                                                                 // 16\n  }                                                                                                                    // 19\n});                                                                                                                    // 1\nTemplate.afCheckboxGroupInline_semanticUI.onRendered(function () {                                                     // 22\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);                                       // 23\n});                                                                                                                    // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"select-radio\":{\"template.select-radio.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/template.select-radio.js       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadioGroup_semanticUI\");                                                                       // 2\nTemplate[\"afRadioGroup_semanticUI\"] = new Template(\"Template.afRadioGroup_semanticUI\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    class: \"grouped fields\"                                                                                            // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 12\n      class: \"field\"                                                                                                   // 13\n    }, \"\\n        \", HTML.DIV({                                                                                        // 14\n      class: \"ui radio checkbox\"                                                                                       // 15\n    }, \"\\n          \", HTML.INPUT(HTML.Attrs({                                                                         // 16\n      type: \"radio\",                                                                                                   // 17\n      value: function() {                                                                                              // 18\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 19\n      }                                                                                                                // 20\n    }, function() {                                                                                                    // 21\n      return Spacebars.attrMustache(view.lookup(\"atts\"));                                                              // 22\n    })), \"\\n          \", HTML.LABEL(Blaze.View(\"lookup:..label\", function() {                                          // 23\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 24\n    })), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                                       // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select-radio.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/select-radio.js                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadioGroup_semanticUI.helpers({                                                                             // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts);                                                                                     // 3\n                                                                                                                       //\n    if (this.selected) {                                                                                               // 5\n      atts.checked = \"checked\";                                                                                        // 6\n    } // remove data-schema-key attribute because we put it                                                            // 7\n    // on the entire group                                                                                             // 10\n                                                                                                                       //\n                                                                                                                       //\n    delete atts[\"data-schema-key\"];                                                                                    // 11\n    return atts;                                                                                                       // 13\n  },                                                                                                                   // 14\n  dsk: function () {                                                                                                   // 15\n    return {                                                                                                           // 16\n      \"data-schema-key\": this.atts[\"data-schema-key\"]                                                                  // 17\n    };                                                                                                                 // 16\n  }                                                                                                                    // 19\n});                                                                                                                    // 1\nTemplate.afRadioGroup_semanticUI.onRendered(function () {                                                              // 22\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);                                 // 23\n});                                                                                                                    // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"select-radio-inline\":{\"template.select-radio-inline.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/template.select-radio-i //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadioGroupInline_semanticUI\");                                                                 // 2\nTemplate[\"afRadioGroupInline_semanticUI\"] = new Template(\"Template.afRadioGroupInline_semanticUI\", (function() {       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    class: \"inline fields\"                                                                                             // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 12\n      class: \"field\"                                                                                                   // 13\n    }, \"\\n        \", HTML.DIV({                                                                                        // 14\n      class: \"ui radio checkbox\"                                                                                       // 15\n    }, \"\\n          \", HTML.INPUT(HTML.Attrs({                                                                         // 16\n      type: \"radio\",                                                                                                   // 17\n      value: function() {                                                                                              // 18\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 19\n      }                                                                                                                // 20\n    }, function() {                                                                                                    // 21\n      return Spacebars.attrMustache(view.lookup(\"atts\"));                                                              // 22\n    })), \"\\n          \", HTML.LABEL(Blaze.View(\"lookup:..label\", function() {                                          // 23\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 24\n    })), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                                       // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select-radio-inline.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/select-radio-inline.js  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadioGroupInline_semanticUI.helpers({                                                                       // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts);                                                                                     // 3\n                                                                                                                       //\n    if (this.selected) {                                                                                               // 5\n      atts.checked = \"checked\";                                                                                        // 6\n    } // remove data-schema-key attribute because we put it                                                            // 7\n    // on the entire group                                                                                             // 10\n                                                                                                                       //\n                                                                                                                       //\n    delete atts[\"data-schema-key\"];                                                                                    // 11\n    return atts;                                                                                                       // 13\n  },                                                                                                                   // 14\n  dsk: function () {                                                                                                   // 15\n    return {                                                                                                           // 16\n      \"data-schema-key\": this.atts[\"data-schema-key\"]                                                                  // 17\n    };                                                                                                                 // 16\n  }                                                                                                                    // 19\n});                                                                                                                    // 1\nTemplate.afRadioGroupInline_semanticUI.onRendered(function () {                                                        // 22\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);                                 // 23\n});                                                                                                                    // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"submit\":{\"template.submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/template.submit.js                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputSubmit_semanticUI\");                                                                      // 2\nTemplate[\"afInputSubmit_semanticUI\"] = new Template(\"Template.afInputSubmit_semanticUI\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"submit\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/submit.js                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputSubmit_semanticUI.helpers({                                                                            // 1\n  atts: function () {                                                                                                  // 2\n    var atts = _.clone(this.atts); // Add semantic-ui class                                                            // 3\n                                                                                                                       //\n                                                                                                                       //\n    atts = AutoForm.Utility.addClass(atts, \"ui positive button\");                                                      // 6\n    return atts;                                                                                                       // 8\n  }                                                                                                                    // 9\n});                                                                                                                    // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"tel\":{\"template.tel.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/tel/template.tel.js                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputTel_semanticUI\");                                                                         // 2\nTemplate[\"afInputTel_semanticUI\"] = new Template(\"Template.afInputTel_semanticUI\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"tel\",                                                                                                       // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"text\":{\"template.text.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/text/template.text.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputText_semanticUI\");                                                                        // 2\nTemplate[\"afInputText_semanticUI\"] = new Template(\"Template.afInputText_semanticUI\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"text\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"textarea\":{\"template.textarea.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/textarea/template.textarea.js               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afTextarea_semanticUI\");                                                                         // 2\nTemplate[\"afTextarea_semanticUI\"] = new Template(\"Template.afTextarea_semanticUI\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.TEXTAREA(HTML.Attrs(function() {                                                                         // 5\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 6\n  }, {                                                                                                                 // 7\n    value: function() {                                                                                                // 8\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 9\n    }                                                                                                                  // 10\n  }));                                                                                                                 // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"time\":{\"template.time.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/time/template.time.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputTime_semanticUI\");                                                                        // 2\nTemplate[\"afInputTime_semanticUI\"] = new Template(\"Template.afInputTime_semanticUI\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"time\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"url\":{\"template.url.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/url/template.url.js                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputUrl_semanticUI\");                                                                         // 2\nTemplate[\"afInputUrl_semanticUI\"] = new Template(\"Template.afInputUrl_semanticUI\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"url\",                                                                                                       // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"week\":{\"template.week.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/fabienb4_autoform-semantic-ui/templates/semantic-ui/inputTypes/week/template.week.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputWeek_semanticUI\");                                                                        // 2\nTemplate[\"afInputWeek_semanticUI\"] = new Template(\"Template.afInputWeek_semanticUI\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"week\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                                            // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/template.quickForm.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afArrayField/template.afArrayField.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/template.afFormGroup.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afObjectField/template.afObjectField.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afObjectField/afObjectField.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/template.basic-select.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/basic-select.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/template.boolean-checkbox.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/boolean-checkbox.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/button/template.button.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/button/button.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/color/template.color.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/date/template.date.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/datetime/template.datetime.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/datetime-local/template.datetime-local.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/email/template.email.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/month/template.month.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/number/template.number.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/password/template.password.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/template.radio.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/radio.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/range/template.range.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/template.reset.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/reset.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/search/template.search.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/template.select.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/template.select-checkbox.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/select-checkbox.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/template.select-checkbox-inline.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/select-checkbox-inline.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/template.select-radio.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/select-radio.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/template.select-radio-inline.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/select-radio-inline.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/template.submit.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/submit.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/tel/template.tel.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/text/template.text.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/textarea/template.textarea.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/time/template.time.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/url/template.url.js\");\nrequire(\"./node_modules/meteor/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/week/template.week.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['fabienb4:autoform-semantic-ui'] = {};\n\n})();\n","servePath":"/packages/fabienb4_autoform-semantic-ui.js","sourceMap":{"version":3,"sources":["/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/semantic-ui.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/quickForm/quickForm.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afFormGroup/afFormGroup.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/components/afObjectField/afObjectField.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/basic-select/basic-select.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/boolean-checkbox/boolean-checkbox.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/button/button.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/radio/radio.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/reset/reset.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select/select.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox/select-checkbox.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-checkbox-inline/select-checkbox-inline.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio/select-radio.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/select-radio-inline/select-radio-inline.js","/packages/fabienb4:autoform-semantic-ui/templates/semantic-ui/inputTypes/submit/submit.js"],"names":["Template","autoForm","helpers","atts","val","htmlAttributes","context","AutoForm","Utility","addClass","removeProps","hasComponentPrefix","prop","_","any","componentTypeList","indexOf","componentType","hasOwnProperty","contains","isArray","isObject","validation","novalidate","quickForm_semanticUI","fieldGroupLabel","name","Number","isNaN","parseInt","substr","charAt","SimpleSchema","defaultLabel","toUpperCase","slice","quickFieldsAtts","pick","submitButtonAtts","qfAtts","buttonClasses","qfAutoFormContext","ctx","clone","afFormGroup_semanticUI","skipLabel","self","type","getInputType","afFieldInputAtts","requiredClass","required","inputClass","leftLabel","rightLabel","leftIcon","rightIcon","className","afObjectField_semanticUI","addInputType","template","valueOut","valueConverters","stringArray","stringToStringArray","number","stringToNumber","numberArray","stringToNumberArray","boolean","stringToBoolean","booleanArray","stringToBooleanArray","date","stringToDate","dateArray","stringToDateArray","contextAdjust","autocomplete","itemAtts","omit","firstOption","items","push","label","value","_id","selected","buildOption","option","htmlAtts","toString","each","selectOptions","optgroup","subOptions","map","afCheckbox_semanticUI","onRendered","$","firstNode","checkbox","data","settings","inputAtts","afInputButton_semanticUI","afRadio_semanticUI","checked","afInputReset_semanticUI","buildItem","item","icon","description","extend","itemGroup","subItems","category","afSelect_semanticUI","divAtts","isString","class","disabled","search","fullTextSearch","multiple","showClearButton","events","event","dropdown","node","allowAdditions","maxSelections","allowCategorySelection","useLabels","autorun","c","currentData","stop","afCheckboxGroup_semanticUI","dsk","find","afCheckboxGroupInline_semanticUI","afRadioGroup_semanticUI","afRadioGroupInline_semanticUI","afInputSubmit_semanticUI"],"mappings":"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","file":"/packages/fabienb4_autoform-semantic-ui.js","sourcesContent":["/* global AutoForm */\n\nTemplate.autoForm.helpers({\n  atts() {\n    // After removing all of the props we know about, everything else should\n    // become a form attribute unless it's an array or object.\n    let val, htmlAttributes = {}, context = this;\n\n    context = AutoForm.Utility.addClass(context, \"ui form\");\n\n    let removeProps = [\n      \"schema\",\n      \"collection\",\n      \"validation\",\n      \"doc\",\n      \"resetOnSuccess\",\n      \"type\",\n      \"template\",\n      \"autosave\",\n      \"autosaveOnKeyup\",\n      \"meteormethod\",\n      \"filter\",\n      \"autoConvert\",\n      \"removeEmptyStrings\",\n      \"trimStrings\"\n    ];\n\n    // Filter out any attributes that have a component prefix\n    function hasComponentPrefix(prop) {\n      return _.any(\n        AutoForm.Utility.componentTypeList,\n        componentType => prop.indexOf(componentType + \"-\") === 0\n      );\n    }\n\n    // Filter out arrays and objects, which are obviously not meant to be\n    // HTML attributes.\n    for (let prop in context) {\n      if (context.hasOwnProperty(prop) && ! _.contains(removeProps, prop) &&\n          ! hasComponentPrefix(prop)) {\n        val = context[prop];\n\n        if (! _.isArray(val) && ! _.isObject(val)) {\n          htmlAttributes[prop] = val;\n        }\n      }\n    }\n\n    // By default, we add the `novalidate=\"novalidate\"` attribute to our form,\n    // unless the user passes `validation=\"browser\"`.\n    if (this.validation !== \"browser\" && ! htmlAttributes.novalidate) {\n      htmlAttributes.novalidate = \"novalidate\";\n    }\n\n    return htmlAttributes;\n  }\n});\n","Template.quickForm_semanticUI.helpers({\n  fieldGroupLabel() {\n    let name = this.name;\n\n    // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n    if (! Number.isNaN(parseInt(name.substr(0,2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    }\n\n    // if SimpleSchema.defaultLabel is defined, use it\n    if (typeof SimpleSchema.defaultLabel === \"function\") {\n      return SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts() {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, \"id-prefix\");\n  },\n  submitButtonAtts() {\n    let qfAtts = this.atts;\n    let atts = {};\n\n    if (typeof qfAtts.buttonClasses === \"string\") {\n      atts[\"class\"] = qfAtts.buttonClasses;\n    } else {\n      atts[\"class\"] = \"ui positive submit button\";\n    }\n\n    return atts;\n  },\n  qfAutoFormContext() {\n    let ctx = _.clone(this.qfAutoFormContext || {});\n\n    ctx = AutoForm.Utility.addClass(ctx, \"ui form\");\n\n    delete ctx[\"id-prefix\"];\n\n    return ctx;\n  }\n});\n","Template.afFormGroup_semanticUI.helpers({\n  skipLabel() {\n    let self = this;\n    let type = AutoForm.getInputType(self.afFieldInputAtts);\n\n    return (self.skipLabel || type === \"boolean-checkbox\");\n  },\n  requiredClass() {\n    if (this.required) {\n      return \"required\";\n    }\n  },\n  inputClass() {\n    let leftLabel  = this.afFieldInputAtts.leftLabel;\n    let rightLabel = this.afFieldInputAtts.rightLabel;\n    let leftIcon   = this.afFieldInputAtts.leftIcon;\n    let rightIcon  = this.afFieldInputAtts.rightIcon;\n\n    if (leftLabel || rightLabel || leftIcon || rightIcon) {\n      let className = \"ui\";\n\n      if (leftLabel && rightIcon) {\n        className += \" labeled icon\";\n      } else if (leftIcon && rightLabel) {\n        className += \" left icon right labeled\";\n      } else if (leftLabel) {\n        className += \" labeled\";\n      } else if (rightLabel) {\n        className += \" right labeled\";\n      } else if (leftIcon) {\n        className += \" left icon\";\n      } else if (rightIcon) {\n        className += \" icon\";\n      }\n\n      return className + \" fluid input\";\n    }\n  },\n  leftLabel() {\n    return this.afFieldInputAtts.leftLabel;\n  },\n  rightLabel() {\n    return this.afFieldInputAtts.rightLabel;\n  },\n  leftIcon() {\n    return this.afFieldInputAtts.leftIcon;\n  },\n  rightIcon() {\n    return this.afFieldInputAtts.rightIcon;\n  }\n});\n","Template.afObjectField_semanticUI.helpers({\n  quickFieldsAtts() {\n    return _.pick(this, \"name\", \"id-prefix\");\n  }\n});\n","AutoForm.addInputType(\"basic-select\", {\n  template: \"afBasicSelect\",\n\tvalueOut() {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n    stringArray:  AutoForm.valueConverters.stringToStringArray,\n    number:       AutoForm.valueConverters.stringToNumber,\n    numberArray:  AutoForm.valueConverters.stringToNumberArray,\n    boolean:      AutoForm.valueConverters.stringToBoolean,\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,\n    date:         AutoForm.valueConverters.stringToDate,\n    dateArray:    AutoForm.valueConverters.stringToDateArray\n\t},\n  contextAdjust(context) {\n    // can fix issues with some browsers selecting the firstOption instead of the selected option\n    context.atts.autocomplete = \"off\";\n\n    let itemAtts    = _.omit(context.atts, \"firstOption\");\n    let firstOption = context.atts.firstOption;\n\n    // build items list\n    context.items = [];\n\n    // If a firstOption was provided, add that to the items list first\n    if (firstOption !== false) {\n      context.items.push({\n        name:  context.name,\n        label: (typeof firstOption === \"string\" ? firstOption : \"(Select One)\"),\n        value: \"\",\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        //\n        // Setting this to an empty string caused problems if option with value\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and\n        // considers that a duplicate.\n        // See https://github.com/aldeed/meteor-autoform/issues/656\n        _id:      \"AUTOFORM_EMPTY_FIRST_OPTION\",\n        selected: false,\n        atts:     itemAtts\n      });\n    }\n\n    let buildOption = option => ({\n      name:     context.name,\n      label:    option.label,\n      value:    option.value,\n      htmlAtts: _.omit(option, \"label\", \"value\"),\n      // _id must be included because it is a special property that\n      // #each uses to track unique list items when adding and removing them\n      // See https://github.com/meteor/meteor/issues/2174\n      //\n      // The toString() is necessary because otherwise Spacebars evaluates\n      // any string to 1 if the other values are numbers, and then considers\n      // that a duplicate.\n      // See https://github.com/aldeed/meteor-autoform/issues/656\n      _id:      option.value.toString(),\n      selected: (option.value === context.value),\n      atts:     itemAtts\n    });\n\n    // Add all defined options\n    _.each(context.selectOptions, option => {\n      if (option.optgroup) {\n        let subOptions = _.map(option.items, buildOption);\n\n        context.items.push({\n          optgroup: option.optgroup,\n          items:    subOptions\n        });\n      } else {\n        context.items.push(buildOption(option));\n      }\n    });\n\n    return context;\n  }\n});\n","Template.afCheckbox_semanticUI.onRendered(function() {\n  this.$(this.firstNode).checkbox(this.data.atts.settings);\n});\n\nTemplate.afCheckbox_semanticUI.helpers({\n  inputAtts() {\n    return _.omit(this.atts, \"checkboxType\");\n  }\n});\n","Template.afInputButton_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");\n\n    return atts;\n  }\n});\n","Template.afRadio_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"\";\n    }\n\n    return atts;\n  }\n});\n\nTemplate.afRadio_semanticUI.onRendered(function() {\n  this.$(this.firstNode).checkbox(this.data.atts.settings);\n});\n","Template.afInputReset_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui button\");\n\n    return atts;\n  }\n});\n","AutoForm.addInputType(\"select\", {\n\ttemplate: \"afSelect\",\n\tvalueOut() {\n\t\treturn this.val();\n\t},\n\tvalueConverters: {\n    stringArray : AutoForm.valueConverters.stringToStringArray,\n    number      : AutoForm.valueConverters.stringToNumber,\n    numberArray : AutoForm.valueConverters.stringToNumberArray,\n    boolean     : AutoForm.valueConverters.stringToBoolean,\n    booleanArray: AutoForm.valueConverters.stringToBooleanArray,\n    date        : AutoForm.valueConverters.stringToDate,\n    dateArray   : AutoForm.valueConverters.stringToDateArray\n\t},\n\tcontextAdjust(context) {\n\t\t// can fix issues with some browsers selecting the firstOption instead of the selected option\n\t\tcontext.atts.autocomplete = \"off\";\n\n\t\t// delete eventual option used in other templates\n\t\tdelete context.atts.firstOption;\n\n\t\tlet itemAtts = _.omit(context.atts, \"placeholder\");\n\n\t\t// build items list\n\t\tcontext.items = [];\n\n\t\tlet buildItem = item => ({\n\t\t\tname       : context.name,\n\t\t\tlabel      : item.label,\n\t\t\ticon       : item.icon || false,\n\t\t\tdescription: item.description || false,\n\t\t\tvalue      : item.value,\n\t\t\thtmlAtts   : _.extend(\n\t\t\t\t{ class: \"item\" },\n\t\t\t\t_.omit(item, \"label\", \"value\", \"icon\", \"circularLabel\", \"description\", \"itemGroup\", \"category\", \"items\")\n\t\t\t),\n\t\t\t// _id must be included because it is a special property that\n\t\t\t// #each uses to track unique list items when adding and removing them\n\t\t\t// See https://github.com/meteor/meteor/issues/2174\n\t\t\t//\n\t\t\t// The toString() is necessary because otherwise Spacebars evaluates\n\t\t\t// any string to 1 if the other values are numbers, and then considers\n\t\t\t// that a duplicate.\n\t\t\t// See https://github.com/aldeed/meteor-autoform/issues/656\n\t\t\t_id        : item.value.toString(),\n\t\t\tatts       : itemAtts\n\t\t});\n\n\t\t// Add all defined options\n\t\t_.each(context.selectOptions, item => {\n\t\t\tif (item.itemGroup) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\titemGroup: item.itemGroup,\n\t\t\t\t\titems    : subItems\n\t\t\t\t});\n\t\t\t} else if (item.category) {\n\t\t\t\tlet subItems = _.map(item.items, buildItem);\n\n\t\t\t\tcontext.items.push({\n\t\t\t\t\tcategory: item.category,\n\t\t\t\t\titems   : subItems\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcontext.items.push(buildItem(item));\n\t\t\t}\n\t\t});\n\n\t\treturn context;\n\t}\n});\n\nTemplate.afSelect_semanticUI.helpers({\n\tdivAtts() {\n\t\tlet atts = { class: \"ui dropdown\" };\n\n\t\t// Add custom classes or default\n\t\tif (_.isString(this.atts.class)) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, this.atts.class);\n\t\t} else {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"fluid selection\");\n\t\t}\n\n\t\t// Add the disabled class if required\n\t\tif (this.atts.disabled === \"\") {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"disabled\");\n\t\t}\n\n\t\t// Add search class, also add selection for proper design\n\t\tif (this.atts.search || this.atts.fullTextSearch) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"search selection\");\n\t\t}\n\n\t\t// Add multiple class\n\t\tif (this.atts.multiple) {\n\t\t\tatts = AutoForm.Utility.addClass(atts, \"multiple\");\n\t\t}\n\n\t\treturn atts;\n\t},\n\tinputAtts() {\n\t\treturn _.pick(this.atts, \"name\", \"id\", \"required\", \"data-schema-key\", \"autocomplete\", \"value\");\n\t},\n\tshowClearButton() {\n\t\treturn this.atts.required !== \"\" && ! this.atts.multiple;\n\t}\n});\n\nTemplate.afSelect_semanticUI.events({\n\t\"click .ui.clear.button\"(event, template) {\n\t\ttemplate.$(\".ui.dropdown\").dropdown(\"clear\").dropdown(\"hide\");\n\t}\n});\n\nTemplate.afSelect_semanticUI.onRendered(function() {\n\tlet node = this.$(this.firstNode);\n\n\tnode.dropdown(_.extend({\n\t\tfullTextSearch        : this.data.atts.fullTextSearch || false,\n\t\tallowAdditions        : this.data.atts.allowAdditions || false,\n\t\tmaxSelections         : this.data.atts.maxSelections || false,\n\t\tallowCategorySelection: this.data.atts.allowCategorySelection || false,\n\t\tuseLabels             : this.data.atts.useLabels === false ? false : true\n\t}, this.data.atts.settings));\n\n  this.autorun((c) => {\n    let data = Template.currentData();\n\n    if (data.value) {\n\t\t\tnode.dropdown(\"set selected\", data.value);\n      c.stop();\n    }\n  });\n});\n","Template.afCheckboxGroup_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afCheckboxGroup_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afCheckboxGroupInline_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afCheckboxGroupInline_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afRadioGroup_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afRadioGroup_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afRadioGroupInline_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    if (this.selected) {\n      atts.checked = \"checked\";\n    }\n\n    // remove data-schema-key attribute because we put it\n    // on the entire group\n    delete atts[\"data-schema-key\"];\n\n    return atts;\n  },\n  dsk() {\n    return {\n      \"data-schema-key\": this.atts[\"data-schema-key\"]\n    };\n  }\n});\n\nTemplate.afRadioGroupInline_semanticUI.onRendered(function() {\n  this.$(this.firstNode).find(\".ui.radio.checkbox\").checkbox(this.data.atts.settings);\n});\n","Template.afInputSubmit_semanticUI.helpers({\n  atts() {\n    let atts = _.clone(this.atts);\n\n    // Add semantic-ui class\n    atts = AutoForm.Utility.addClass(atts, \"ui positive button\");\n\n    return atts;\n  }\n});\n"]}}]